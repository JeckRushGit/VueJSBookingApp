{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"my-table\",\n  class: \"table table-striped table-responsive table-bordered\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_createCommentVNode(\"    <thead>\"), _createCommentVNode(\"      <tr>\"), _createCommentVNode(\"      </tr>\"), _createCommentVNode(\"    </thead>\"), _createCommentVNode(\"    <tbody>\"), _createCommentVNode(\"      <tr>\"), _createCommentVNode(\"        <th scope=\\\"row\\\">15:00-16:00</th>\"), _createCommentVNode(\"&lt;!&ndash;        <td class=\\\"bg-success\\\"></td>&ndash;&gt;\"), _createCommentVNode(\"&lt;!&ndash;        <td class=\\\"table-active\\\"></td>&ndash;&gt;\"), _createCommentVNode(\"&lt;!&ndash;        <td class=\\\"table-active\\\"></td>&ndash;&gt;\"), _createCommentVNode(\"&lt;!&ndash;        <td class=\\\"table-active\\\"></td>&ndash;&gt;\"), _createCommentVNode(\"&lt;!&ndash;        <td class=\\\"table-active\\\"></td>&ndash;&gt;\"), _createCommentVNode(\"      </tr>\"), _createCommentVNode(\"      <tr>\"), _createCommentVNode(\"        <th scope=\\\"row\\\">16:00-17:00</th>\"), _createCommentVNode(\"      </tr>\"), _createCommentVNode(\"      <tr>\"), _createCommentVNode(\"        <th scope=\\\"row\\\">17:00-18:00</th>\"), _createCommentVNode(\"      </tr>\"), _createCommentVNode(\"      <tr>\"), _createCommentVNode(\"        <th scope=\\\"row\\\">18:00-19:00</th>\"), _createCommentVNode(\"      </tr>\"), _createCommentVNode(\"    </tbody>\")], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n<!--    <thead>-->\r\n<!--      <tr>-->\r\n\r\n<!--      </tr>-->\r\n<!--    </thead>-->\r\n<!--    <tbody>-->\r\n<!--      <tr>-->\r\n<!--        <th scope=\"row\">15:00-16:00</th>-->\r\n<!--&lt;!&ndash;        <td class=\"bg-success\"></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td class=\"table-active\"></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td class=\"table-active\"></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td class=\"table-active\"></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td class=\"table-active\"></td>&ndash;&gt;-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <th scope=\"row\">16:00-17:00</th>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <th scope=\"row\">17:00-18:00</th>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <th scope=\"row\">18:00-19:00</th>-->\r\n<!--      </tr>-->\r\n<!--    </tbody>-->\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  props : {\r\n    data : {\r\n      required : true\r\n    },\r\n    callback :{\r\n      required: true\r\n    },\r\n    days : {\r\n      required : true\r\n    },\r\n    month : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      myObj : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.Foo();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.Foo();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    Foo(){\r\n      try {\r\n        let month = toRaw(this.month);\r\n        let professorEmail = toRaw(this.data)[0].professor.email;\r\n        let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n        let days = toRaw(this.days);\r\n        const table = this.$refs[\"my-table\"];\r\n        const calLogi = toRaw(this.myObj);\r\n        for (let i = 0; i < table.rows.length; i++) {\r\n          const row = table.rows[i];\r\n          // Loop through the columns of the row\r\n          if (i === 0) {\r\n            this.fillHeadRow(row)\r\n          }\r\n          if (i !== 0) {\r\n            for (let j = 1; j < 6; j++) {\r\n              let hour = row.cells[0].innerHTML;\r\n              let dayIsAvailable = calLogi.days[days[j - 1]][hour];\r\n              const cell = row.insertCell(j);\r\n              if (dayIsAvailable) {\r\n                cell.classList.add('bg-success');\r\n                cell.addEventListener('click', async function () {\r\n                  const day = days[j - 1];\r\n                  console.log(day, hour, month, professorEmail, courseTitol);\r\n                  await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n                }.bind(this), false);\r\n              } else {\r\n                cell.classList.add('table-default');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    async handleSubmitLesson(day,hour,month,professorEmail,courseTitol){\r\n      try {\r\n        const response = await axios.post('ServletBookTeaching',null,{params : {action : 'web',professorEmail : professorEmail,courseTitol : courseTitol,day : day,month : month,hour : hour}});\r\n        this.callback();\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = toRaw(this.days);\r\n\r\n\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      try {\r\n        let obj = {days : {}};\r\n        let days = toRaw(this.days);\r\n\r\n        //setta prima tutti i giorni a false\r\n\r\n        for(let i = 0 ; i < days.length ; i++){\r\n          obj.days[days[i]] = {\r\n            '15:00-16:00' : false,\r\n            '16:00-17:00' : false,\r\n            '17:00-18:00' : false,\r\n            '18:00-19:00' : false,\r\n          };\r\n        }\r\n\r\n\r\n//        setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n        for(let i = 0; i < rawData.length ; i++){\r\n          obj.days[rawData[i].day][rawData[i].hour] = true;\r\n        }\r\n\r\n        this.myObj = obj;\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";;EACSA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;;uBAA5BC,mBAAA,CAyBQ,SAzBRC,UAyBQ,GAxBVC,mBAAA,eAAkB,EAClBA,mBAAA,cAAiB,EAEjBA,mBAAA,eAAkB,EAClBA,mBAAA,gBAAmB,EACnBA,mBAAA,eAAkB,EAClBA,mBAAA,cAAiB,EACjBA,mBAAA,8CAA+C,EAC/CA,mBAAA,iEAAkE,EAClEA,mBAAA,mEAAoE,EACpEA,mBAAA,mEAAoE,EACpEA,mBAAA,mEAAoE,EACpEA,mBAAA,mEAAoE,EACpEA,mBAAA,eAAkB,EAClBA,mBAAA,cAAiB,EACjBA,mBAAA,8CAA+C,EAC/CA,mBAAA,eAAkB,EAClBA,mBAAA,cAAiB,EACjBA,mBAAA,8CAA+C,EAC/CA,mBAAA,eAAkB,EAClBA,mBAAA,cAAiB,EACjBA,mBAAA,8CAA+C,EAC/CA,mBAAA,eAAkB,EAClBA,mBAAA,gBAAmB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}