{"ast":null,"code":"import axios from \"axios\";\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\nexport default {\n  name: \"AddTeachingsPage\",\n  components: {\n    VueMultiselect\n  },\n  data() {\n    return {\n      listOfProfessors: null,\n      selectedProfessor: null,\n      listOfCourses: null,\n      selectedCourse: null,\n      offline: false\n    };\n  },\n  async created() {\n    await this.fetchProfessors();\n  },\n  methods: {\n    async fetchProfessors() {\n      try {\n        const response = await axios.get('ServletProfessorRequests', {\n          params: {\n            action: 'getProfessors'\n          }\n        });\n        this.listOfProfessors = response.data;\n      } catch (e) {\n        if (e.response) {\n          if (e.response.status === 401) {\n            this.$handle_session_expired();\n          }\n        } else {\n          this.offline = true;\n        }\n      }\n    },\n    async fetchCourses(professor) {\n      try {\n        const response = await axios.get('ServletProfessorRequests', {\n          params: {\n            action: 'getCourses',\n            professorEmail: professor.email\n          }\n        });\n        this.listOfCourses = response.data;\n      } catch (e) {\n        if (e.response) {\n          if (e.response.status === 401) {\n            this.$handle_session_expired();\n          }\n        } else {\n          this.offline = true;\n        }\n      }\n    },\n    async sendData(professor, course) {\n      try {\n        const response = await axios.post('ServletProfessorRequests', null, {\n          params: {\n            professorEmail: professor.info.email,\n            courseTitol: course.course_titol\n          }\n        });\n        this.removeCourse(course);\n        console.log(\"lezione aggiunta con successo\");\n      } catch (e) {\n        if (e.response) {\n          if (e.response.status === 401) {\n            this.$handle_session_expired();\n          }\n        } else {\n          this.offline = true;\n        }\n      }\n    },\n    removeCourse(course) {\n      // for(let i = 0 ; i < this.listOfCourses.length ; i++){\n      //   if(this.listOfCourses[i].courseTitol === course.courseTitol){\n      //     this.listOfCourses.splice(i,1);\n      //   }\n      // }\n      // this.selectedCourse = this.listOfCourses[0];\n      this.fetchCourses(this.selectedProfessor.info);\n    }\n  },\n  watch: {\n    listOfProfessors(newList, oldList) {\n      this.selectedProfessor = this.listOfProfessorLogic[0];\n    },\n    async selectedProfessor(newProfessor, oldProfessor) {\n      await this.fetchCourses(newProfessor.info);\n    },\n    listOfCourses(newList, oldList) {\n      this.selectedCourse = newList[0];\n    }\n  },\n  computed: {\n    listOfProfessorLogic() {\n      return this.listOfProfessors.map(function (professor) {\n        return {\n          label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\",\n          info: professor\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","VueMultiselect","name","components","data","listOfProfessors","selectedProfessor","listOfCourses","selectedCourse","offline","created","fetchProfessors","methods","response","get","params","action","e","status","$handle_session_expired","fetchCourses","professor","professorEmail","email","sendData","course","post","info","courseTitol","course_titol","removeCourse","console","log","watch","newList","oldList","listOfProfessorLogic","newProfessor","oldProfessor","computed","map","label","surname"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AddTeachingsPage.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!offline\">\r\n    <div v-if=\"listOfProfessors\">\r\n      <div class=\"d-flex justify-content-around align-items-center\">\r\n        <div class=\"mt-5\" style=\"width: 400px\">\r\n          <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfProfessors\" label=\"label\"\r\n                          :options=\"listOfProfessorLogic\" v-model=\"selectedProfessor\"/>\r\n        </div>\r\n        <div class=\"mt-5\" style=\"width: 400px;\">\r\n          <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfCourses\" label=\"course_titol\"\r\n                          :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"selectedProfessor && selectedCourse\">\r\n        <div class=\"d-flex align-items-baseline\">\r\n          <h2 class=\"m-5\">Selected professor : </h2>\r\n          <p>{{ selectedProfessor.label }}</p>\r\n        </div>\r\n\r\n        <button class=\"m-5 btn btn-primary\" @click=\"sendData(selectedProfessor,selectedCourse)\">Create teaching</button>\r\n\r\n\r\n        <div class=\"d-flex align-items-baseline\">\r\n          <h2 class=\"m-5\">Selected course : </h2>\r\n          <p>{{ selectedCourse.course_titol }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"d-flex justify-content-center\">\r\n      <div class=\"spacer\"></div>\r\n      <LoadingCircle class=\"mt-5\"></LoadingCircle>\r\n      <div class=\"spacer\"></div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <p class=\"m-1\">Service not available, try again later</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\r\n\r\nexport default {\r\n  name: \"AddTeachingsPage\",\r\n  components: {VueMultiselect},\r\n  data() {\r\n    return {\r\n      listOfProfessors: null,\r\n      selectedProfessor: null,\r\n      listOfCourses: null,\r\n      selectedCourse: null,\r\n      offline: false,\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchProfessors();\r\n  },\r\n  methods: {\r\n    async fetchProfessors() {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {params: {action: 'getProfessors'}})\r\n        this.listOfProfessors = response.data;\r\n\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n    async fetchCourses(professor) {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {\r\n          params: {\r\n            action: 'getCourses',\r\n            professorEmail: professor.email\r\n          }\r\n        });\r\n        this.listOfCourses = response.data;\r\n\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    async sendData(professor, course) {\r\n      try {\r\n        const response = await axios.post('ServletProfessorRequests', null, {\r\n          params: {\r\n            professorEmail: professor.info.email,\r\n            courseTitol: course.course_titol\r\n          }\r\n        });\r\n        this.removeCourse(course);\r\n        console.log(\"lezione aggiunta con successo\");\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    removeCourse(course) {\r\n      // for(let i = 0 ; i < this.listOfCourses.length ; i++){\r\n      //   if(this.listOfCourses[i].courseTitol === course.courseTitol){\r\n      //     this.listOfCourses.splice(i,1);\r\n      //   }\r\n      // }\r\n      // this.selectedCourse = this.listOfCourses[0];\r\n      this.fetchCourses(this.selectedProfessor.info)\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    listOfProfessors(newList, oldList) {\r\n      this.selectedProfessor = this.listOfProfessorLogic[0];\r\n    },\r\n\r\n    async selectedProfessor(newProfessor, oldProfessor) {\r\n      await this.fetchCourses(newProfessor.info)\r\n    },\r\n    listOfCourses(newList, oldList) {\r\n      this.selectedCourse = newList[0];\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    listOfProfessorLogic() {\r\n      return this.listOfProfessors.map(function (professor) {\r\n        return {label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\", info: professor};\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}