{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport VueMultiselect from 'vue-multiselect';\nimport { toRaw } from \"vue\";\nimport LoadingCircle from \"@/components/LoadingCircle.vue\";\nimport CalendarView from \"@/components/CalendarView.vue\";\nexport default {\n  name: \"AgendaPage\",\n  components: {\n    VueMultiselect,\n    LoadingCircle,\n    CalendarView\n  },\n  data() {\n    return {\n      selectedProfessor: null,\n      selectedCourse: null,\n      listOfCourses: null,\n      listOfProfessor: null,\n      bookings: null,\n      month: null,\n      days: nul\n    };\n  },\n  async created() {\n    await this.fetchData();\n  },\n  methods: {\n    refresh() {\n      this.$router.go();\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get('ServletGetTeachings', {\n          params: {\n            action: 'web'\n          }\n        });\n        let x = toRaw(response.data);\n        let map = new Map();\n        for (let i = 0; i < x.length; i++) {\n          let key = x[i].course.course_titol;\n          if (!map.has(key)) {\n            // let listOfProfessor = [x[i].professor];\n            let listOfProfessor = [{\n              professorKey: x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\",\n              professorInfo: x[i].professor\n            }];\n            map.set(key, listOfProfessor);\n          } else {\n            let listOfProfessor = map.get(key);\n            listOfProfessor.push({\n              professorKey: x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\",\n              professorInfo: x[i].professor\n            });\n          }\n        }\n        let list = [];\n        map.forEach((value, key) => {\n          list.push({\n            course: key,\n            listOfProfessor: value\n          });\n        });\n        this.listOfCourses = list;\n        this.selectedCourse = list[0];\n        this.listOfProfessor = list[0].listOfProfessor;\n        this.selectedProfessor = list[0].listOfProfessor[0];\n        const response2 = axios.get('ServletGetAvBookings', {\n          params: {\n            action: 'web-getdaysandmonth'\n          }\n        });\n      } catch (e) {\n        this.$handle_session_expired();\n      }\n    },\n    async fetchBookings(professor, course) {\n      try {\n        const response = await axios.get('ServletGetAvBookings', {\n          params: {\n            titoloCorso: course.course,\n            emailProfessore: professor.professorInfo.email\n          }\n        });\n        this.bookings = response.data;\n      } catch (e) {\n        this.$handle_session_expired();\n      }\n    }\n  },\n  watch: {\n    selectedCourse(newCourse, oldCourse) {\n      this.listOfProfessor = newCourse.listOfProfessor;\n      this.selectedProfessor = newCourse.listOfProfessor[0];\n    },\n    selectedProfessor(newProfessor, oldProfessor) {\n      this.fetchBookings(toRaw(newProfessor), toRaw(this.selectedCourse));\n    }\n  }\n};","map":{"version":3,"names":["axios","VueMultiselect","toRaw","LoadingCircle","CalendarView","name","components","data","selectedProfessor","selectedCourse","listOfCourses","listOfProfessor","bookings","month","days","nul","created","fetchData","methods","refresh","$router","go","response","get","params","action","x","map","Map","i","length","key","course","course_titol","has","professorKey","professor","surname","email","professorInfo","set","push","list","forEach","value","response2","e","$handle_session_expired","fetchBookings","titoloCorso","emailProfessore","watch","newCourse","oldCourse","newProfessor","oldProfessor"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AgendaPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex flex-column justify-content-center\" v-if=\"listOfCourses\" style=\"width: 100%\">\r\n    <div class=\"d-flex\">\r\n      <div class=\"spacer\"></div>\r\n      <div class=\"mt-5 text-center\">\r\n        <p>Selected Professor :</p>\r\n        <VueMultiselect :max-height=\"150\"\r\n                        class=\"dropdown-style\" label=\"course\" :hideSelected=\"true\" :allowEmpty=\"false\"\r\n                        :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n      </div>\r\n      <div class=\"spacer\" style=\"flex-grow: 4\"></div>\r\n\r\n      <div class=\"mt-5 text-center\">\r\n        <p>Selected Course :</p>\r\n        <VueMultiselect :max-height=\"150\"\r\n                        class=\"dropdown-style\" label=\"professorKey\" :allowEmpty=\"false\" :hideSelected=\"true\"\r\n                        :options=\"listOfProfessor\"\r\n                        v-model=\"selectedProfessor\"/>\r\n      </div>\r\n      <div class=\"spacer\"></div>\r\n    </div>\r\n    <div class=\"m-5\" v-if=\"bookings\">\r\n      <CalendarView :data=\"bookings\" :callback=\"refresh\"></CalendarView>\r\n    </div>\r\n  </div>\r\n  <div v-else class=\"d-flex justify-content-center\">\r\n    <div class=\"spacer\"></div>\r\n    <LoadingCircle class=\"mt-5\"></LoadingCircle>\r\n    <div class=\"spacer\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport {toRaw} from \"vue\";\r\nimport LoadingCircle from \"@/components/LoadingCircle.vue\";\r\nimport CalendarView from \"@/components/CalendarView.vue\";\r\n\r\nexport default {\r\n  name: \"AgendaPage\",\r\n  components: {\r\n    VueMultiselect,\r\n    LoadingCircle,\r\n    CalendarView\r\n  },\r\n  data() {\r\n    return {\r\n      selectedProfessor: null,\r\n      selectedCourse: null,\r\n      listOfCourses: null,\r\n      listOfProfessor: null,\r\n      bookings: null,\r\n      month: null,\r\n      days: nul\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchData();\r\n  },\r\n\r\n  methods: {\r\n\r\n    refresh(){\r\n      this.$router.go();\r\n    },\r\n\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get('ServletGetTeachings', {params: {action: 'web'}});\r\n        let x = toRaw(response.data);\r\n        let map = new Map();\r\n        for (let i = 0; i < x.length; i++) {\r\n          let key = x[i].course.course_titol;\r\n          if (!map.has(key)) {\r\n            // let listOfProfessor = [x[i].professor];\r\n            let listOfProfessor = [{\r\n              professorKey: x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\",\r\n              professorInfo: x[i].professor\r\n            }];\r\n            map.set(key, listOfProfessor);\r\n          } else {\r\n            let listOfProfessor = map.get(key);\r\n            listOfProfessor.push({\r\n              professorKey: x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\",\r\n              professorInfo: x[i].professor\r\n            });\r\n          }\r\n        }\r\n        let list = [];\r\n        map.forEach((value, key) => {\r\n          list.push({course: key, listOfProfessor: value});\r\n        })\r\n        this.listOfCourses = list;\r\n        this.selectedCourse = list[0];\r\n        this.listOfProfessor = list[0].listOfProfessor;\r\n        this.selectedProfessor = list[0].listOfProfessor[0];\r\n        const response2 = axios.get('ServletGetAvBookings',{params : {action : 'web-getdaysandmonth'}});\r\n\r\n      } catch (e) {\r\n        this.$handle_session_expired()\r\n      }\r\n    },\r\n    async fetchBookings(professor, course) {\r\n      try {\r\n        const response = await axios.get('ServletGetAvBookings', {\r\n          params: {\r\n            titoloCorso: course.course,\r\n            emailProfessore: professor.professorInfo.email\r\n          }\r\n        });\r\n\r\n        this.bookings = response.data;\r\n      } catch (e) {\r\n        this.$handle_session_expired()\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    selectedCourse(newCourse, oldCourse) {\r\n      this.listOfProfessor = newCourse.listOfProfessor;\r\n      this.selectedProfessor = newCourse.listOfProfessor[0];\r\n    },\r\n    selectedProfessor(newProfessor, oldProfessor) {\r\n      this.fetchBookings(toRaw(newProfessor), toRaw(this.selectedCourse))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.dropdown-style {\r\n  width: 400px;\r\n  flex-grow: 4;\r\n\r\n}\r\n\r\n.spacer {\r\n  flex-grow: 1;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}