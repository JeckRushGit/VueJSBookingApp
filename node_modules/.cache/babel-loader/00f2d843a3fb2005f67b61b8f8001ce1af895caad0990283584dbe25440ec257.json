{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"my-table\",\n  class: \"table table-striped table-responsive table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"tbody\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"15:00-16:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"16:00-17:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"17:00-18:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"18:00-19:00\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarPopUp = _resolveComponent(\"CalendarPopUp\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"table\", _hoisted_1, _hoisted_4, 512 /* NEED_PATCH */), _createCommentVNode(\"  <Teleport to=\\\"#calendarpopup\\\">\"), _createCommentVNode(\"    <div class=\\\"modal-bg d-flex justify-content-center align-items-center\\\" v-if=\\\"isPopUpOpen\\\">\"), _createCommentVNode(\"      <div class=\\\"my-modal position-relative\\\" v-click-away=\\\"onClickAway\\\">\"), _createCommentVNode(\"        <button type=\\\"button\\\" class=\\\"btn-close m-2 position-absolute top-0 end-0\\\" aria-label=\\\"Close\\\"\"), _createCommentVNode(\"                @click=\\\"isPopUpOpen = false\\\"></button>\"), _createCommentVNode(\"        <p>Are you sure you want to reserve the lesson held by {{selectedProfessor.name+\\\" \\\"+selectedProfessor.surname}} on {{selectedDay+\\\"/\\\"+selectedMonth}} at {{selectedHour}} of {{selectedCourseTitol}} ?</p>\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"    </div>\"), _createCommentVNode(\"  </Teleport>\"), $data.isPopUpOpen ? (_openBlock(), _createBlock(_component_CalendarPopUp, {\n    key: 0,\n    \"selected-professor\": $data.selectedProfessor,\n    \"selected-course-titol\": $data.selectedProfessor,\n    \"selected-day\": $data.selectedDay,\n    \"selected-hour\": $data.selectedHour,\n    \"selected-month\": $data.selectedMonth\n  }, null, 8 /* PROPS */, [\"selected-professor\", \"selected-course-titol\", \"selected-day\", \"selected-hour\", \"selected-month\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","class","_createElementVNode","scope","_hoisted_2","_hoisted_3","_hoisted_1","_hoisted_4","_createCommentVNode","$data","isPopUpOpen","_createBlock","_component_CalendarPopUp","selectedProfessor","selectedDay","selectedHour","selectedMonth"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n    <thead>\r\n      <tr>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <th scope=\"row\">15:00-16:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">16:00-17:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">17:00-18:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">18:00-19:00</th>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n<!--  <Teleport to=\"#calendarpopup\">-->\r\n<!--    <div class=\"modal-bg d-flex justify-content-center align-items-center\" v-if=\"isPopUpOpen\">-->\r\n<!--      <div class=\"my-modal position-relative\" v-click-away=\"onClickAway\">-->\r\n<!--        <button type=\"button\" class=\"btn-close m-2 position-absolute top-0 end-0\" aria-label=\"Close\"-->\r\n<!--                @click=\"isPopUpOpen = false\"></button>-->\r\n<!--        <p>Are you sure you want to reserve the lesson held by {{selectedProfessor.name+\" \"+selectedProfessor.surname}} on {{selectedDay+\"/\"+selectedMonth}} at {{selectedHour}} of {{selectedCourseTitol}} ?</p>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </Teleport>-->\r\n  <CalendarPopUp v-if=\"isPopUpOpen\" :selected-professor=\"selectedProfessor\" :selected-course-titol=\"selectedProfessor\" :selected-day=\"selectedDay\" :selected-hour=\"selectedHour\" :selected-month=\"selectedMonth\"/>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\nimport axios from \"axios\";\r\nimport CalendarPopUp from \"@/components/CalendarPopUp.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  components: {CalendarPopUp},\r\n  props : {\r\n    data : {\r\n      required : true\r\n    },\r\n    callback :{\r\n      required: true\r\n    },\r\n    days : {\r\n      required : true\r\n    },\r\n    month : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      isPopUpOpen : false,\r\n      myObj : null,\r\n      selectedDay : null,\r\n      selectedHour : null,\r\n      selectedMonth : null,\r\n      selectedProfessor : null,\r\n      selectedCourseTitol : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.createTable();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.updateTable();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    createTable(){\r\n      try {\r\n        let month = toRaw(this.month);\r\n        let professorEmail = toRaw(this.data)[0].professor.email;\r\n        let professorInfo = toRaw(this.data)[0].professor;\r\n        let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n        let days = toRaw(this.days);\r\n        const table = this.$refs[\"my-table\"];\r\n        const calendarLogic = toRaw(this.myObj);\r\n        for (let i = 0; i < table.rows.length; i++) {\r\n          const row = table.rows[i];\r\n          // Loop through the columns of the row\r\n          if (i === 0) {\r\n            this.fillHeadRow(row)\r\n          }\r\n          if (i !== 0) {\r\n            for (let j = 1; j < 6; j++) {\r\n              let hour = row.cells[0].innerHTML;\r\n              let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n              const cell = row.insertCell(j);\r\n              if (dayIsAvailable) {\r\n                cell.classList.add('bg-success');\r\n                cell.addEventListener('click', async function () {\r\n                  const day = days[j - 1];\r\n                  this.isPopUpOpen = true;\r\n                  this.selectedDay = day;\r\n                  this.selectedHour = hour;\r\n                  this.selectedMonth = month;\r\n                  this.selectedProfessor = professorInfo;\r\n                  this.selectedCourseTitol = courseTitol;\r\n                  // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n                }.bind(this), false);\r\n              } else {\r\n                cell.classList.add('table-default');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    updateTable(){\r\n      let month = toRaw(this.month);\r\n      let professorInfo = toRaw(this.data)[0].professor;\r\n      let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n      const table = this.$refs[\"my-table\"];\r\n      const calendarLogic = toRaw(this.myObj);\r\n      let days = toRaw(this.days);\r\n      for(let i = 1 ; i < table.rows.length ; i++){\r\n        const row = table.rows[i];\r\n        for(let j = 1 ; j < 6 ; j++){\r\n          let hour = row.cells[0].innerHTML;\r\n          let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n          let old_cell = row.cells[j];\r\n          let new_cell = old_cell.cloneNode(true);\r\n          old_cell.parentNode.replaceChild(new_cell,old_cell);\r\n          if(dayIsAvailable){\r\n            new_cell.className = \"bg-success\";\r\n            new_cell.addEventListener('click', async function () {\r\n              const day = days[j - 1];\r\n              this.isPopUpOpen = true;\r\n              this.selectedDay = day;\r\n              this.selectedHour = hour;\r\n              this.selectedMonth = month;\r\n              this.selectedProfessor = professorInfo;\r\n              this.selectedCourseTitol = courseTitol;\r\n              // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n            }.bind(this), false);\r\n          }else{\r\n            new_cell.className = \"table-default\";\r\n          }\r\n          // cell.className = \"bg-success\";\r\n        }\r\n      }\r\n\r\n\r\n    },\r\n\r\n    async handleSubmitLesson(day,hour,month,professorEmail,courseTitol){\r\n      try {\r\n        const response = await axios.post('ServletBookTeaching',null,{params : {action : 'web',professorEmail : professorEmail,courseTitol : courseTitol,day : day,month : month,hour : hour}});\r\n        this.callback();\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = toRaw(this.days);\r\n\r\n\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      try {\r\n        let obj = {days : {}};\r\n        let days = toRaw(this.days);\r\n\r\n        //setta prima tutti i giorni a false\r\n\r\n        for(let i = 0 ; i < days.length ; i++){\r\n          obj.days[days[i]] = {\r\n            '15:00-16:00' : false,\r\n            '16:00-17:00' : false,\r\n            '17:00-18:00' : false,\r\n            '18:00-19:00' : false,\r\n          };\r\n        }\r\n\r\n\r\n//        setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n        for(let i = 0; i < rawData.length ; i++){\r\n          obj.days[rawData[i].day][rawData[i].hour] = true;\r\n        }\r\n\r\n        this.myObj = obj;\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    onClickAway(event) {\r\n      this.isPopUpOpen = false;\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";;EACSA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;gCAC1BC,mBAAA,CAGQ,gB,aAFNA,mBAAA,CACK,M;gCAEPA,mBAAA,CAaQ,gB,aAZNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E;oBAf/BC,UAGQ,EACRC,UAaQ,C;;;6DAlBVH,mBAAA,CAmBQ,SAnBRI,UAmBQ,EAAAC,UAAA,yBACVC,mBAAA,sCAAuC,EACvCA,mBAAA,sGAAqG,EACrGA,mBAAA,iFAAgF,EAChFA,mBAAA,8GAA2G,EAC3GA,mBAAA,4DAA6D,EAC7DA,mBAAA,yNAAwN,EACxNA,mBAAA,gBAAmB,EACnBA,mBAAA,cAAiB,EACjBA,mBAAA,iBAAoB,EACGC,KAAA,CAAAC,WAAW,I,cAAhCC,YAAA,CAAgNC,wBAAA;;IAA7K,oBAAkB,EAAEH,KAAA,CAAAI,iBAAiB;IAAG,uBAAqB,EAAEJ,KAAA,CAAAI,iBAAiB;IAAG,cAAY,EAAEJ,KAAA,CAAAK,WAAW;IAAG,eAAa,EAAEL,KAAA,CAAAM,YAAY;IAAG,gBAAc,EAAEN,KAAA,CAAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}