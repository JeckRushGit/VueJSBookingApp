{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-around align-items-center\"\n};\nconst _hoisted_3 = {\n  class: \"mt-5\",\n  style: {\n    \"width\": \"400px\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"mt-5\",\n  style: {\n    \"width\": \"400px\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"d-flex align-items-baseline\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"m-5\"\n}, \"Selected professor : \", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"d-flex align-items-baseline\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"m-5\"\n}, \"Selected course : \", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"m-1\"\n}, \"Service not available, try again later\", -1 /* HOISTED */);\nconst _hoisted_12 = [_hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return !$data.offline ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.listOfProfessors ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    hideSelected: true,\n    allowEmpty: false,\n    label: \"label\",\n    options: $options.listOfProfessorLogic,\n    modelValue: $data.selectedProfessor,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProfessor = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [$data.listOfCourses ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    hideSelected: true,\n    allowEmpty: false,\n    label: \"course_titol\",\n    options: $data.listOfCourses,\n    modelValue: $data.selectedCourse,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedCourse = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)])]), $data.selectedProfessor && $data.selectedCourse ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"p\", null, _toDisplayString($data.selectedProfessor.label), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    class: \"m-5 btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.sendData($data.selectedProfessor, $data.selectedCourse))\n  }, \"Create teaching\"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"p\", null, _toDisplayString($data.selectedCourse.course_titol), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _hoisted_12));\n}","map":{"version":3,"names":["class","style","_createElementVNode","_hoisted_11","$data","offline","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","listOfProfessors","_createBlock","_component_VueMultiselect","hideSelected","allowEmpty","label","options","$options","listOfProfessorLogic","selectedProfessor","$event","_hoisted_4","listOfCourses","selectedCourse","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","onClick","_cache","sendData","_hoisted_8","_hoisted_9","course_titol","_hoisted_10","_hoisted_12"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AddTeachingsPage.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!offline\">\r\n    <div class=\"d-flex justify-content-around align-items-center\">\r\n      <div class=\"mt-5\" style=\"width: 400px\">\r\n        <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfProfessors\" label=\"label\"\r\n                        :options=\"listOfProfessorLogic\" v-model=\"selectedProfessor\"/>\r\n      </div>\r\n      <div class=\"mt-5\" style=\"width: 400px;\">\r\n        <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfCourses\" label=\"course_titol\"\r\n                        :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"selectedProfessor && selectedCourse\">\r\n      <div class=\"d-flex align-items-baseline\">\r\n        <h2 class=\"m-5\">Selected professor : </h2>\r\n        <p>{{ selectedProfessor.label }}</p>\r\n      </div>\r\n\r\n      <button class=\"m-5 btn btn-primary\" @click=\"sendData(selectedProfessor,selectedCourse)\">Create teaching</button>\r\n\r\n\r\n      <div class=\"d-flex align-items-baseline\">\r\n        <h2 class=\"m-5\">Selected course : </h2>\r\n        <p>{{ selectedCourse.course_titol }}</p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n  <div v-else>\r\n    <p class=\"m-1\">Service not available, try again later</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\r\n\r\nexport default {\r\n  name: \"AddTeachingsPage\",\r\n  components: {VueMultiselect},\r\n  data() {\r\n    return {\r\n      listOfProfessors: null,\r\n      selectedProfessor: null,\r\n      listOfCourses: null,\r\n      selectedCourse: null,\r\n      offline: false,\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchProfessors();\r\n  },\r\n  methods: {\r\n    async fetchProfessors() {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {params: {action: 'getProfessors'}})\r\n        this.listOfProfessors = response.data;\r\n\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n    async fetchCourses(professor) {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {\r\n          params: {\r\n            action: 'getCourses',\r\n            professorEmail: professor.email\r\n          }\r\n        });\r\n        this.listOfCourses = response.data;\r\n\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    async sendData(professor, course) {\r\n      try {\r\n        const response = await axios.post('ServletProfessorRequests', null, {\r\n          params: {\r\n            professorEmail: professor.info.email,\r\n            courseTitol: course.course_titol\r\n          }\r\n        });\r\n        this.removeCourse(course);\r\n        console.log(\"lezione aggiunta con successo\");\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.status === 401) {\r\n            this.$handle_session_expired()\r\n          }\r\n        } else {\r\n          this.offline = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    removeCourse(course) {\r\n      // for(let i = 0 ; i < this.listOfCourses.length ; i++){\r\n      //   if(this.listOfCourses[i].courseTitol === course.courseTitol){\r\n      //     this.listOfCourses.splice(i,1);\r\n      //   }\r\n      // }\r\n      // this.selectedCourse = this.listOfCourses[0];\r\n      this.fetchCourses(this.selectedProfessor.info)\r\n    }\r\n\r\n  },\r\n  watch: {\r\n    listOfProfessors(newList, oldList) {\r\n      this.selectedProfessor = this.listOfProfessorLogic[0];\r\n    },\r\n\r\n    async selectedProfessor(newProfessor, oldProfessor) {\r\n      await this.fetchCourses(newProfessor.info)\r\n    },\r\n    listOfCourses(newList, oldList) {\r\n      this.selectedCourse = newList[0];\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    listOfProfessorLogic() {\r\n      return this.listOfProfessors.map(function (professor) {\r\n        return {label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\", info: professor};\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;;;EAESA,KAAK,EAAC;AAAkD;;EACtDA,KAAK,EAAC,MAAM;EAACC,KAAoB,EAApB;IAAA;EAAA;;;EAIbD,KAAK,EAAC,MAAM;EAACC,KAAqB,EAArB;IAAA;EAAA;;;;;;EAObD,KAAK,EAAC;AAA6B;gCACtCE,mBAAA,CAA0C;EAAtCF,KAAK,EAAC;AAAK,GAAC,uBAAqB;;EAOlCA,KAAK,EAAC;AAA6B;gCACtCE,mBAAA,CAAuC;EAAnCF,KAAK,EAAC;AAAK,GAAC,oBAAkB;;;;iCAQtCE,mBAAA,CAAyD;EAAtDF,KAAK,EAAC;AAAK,GAAC,wCAAsC;qBAArDG,WAAyD,C;;;UA9B/CC,KAAA,CAAAC,OAAO,I,cAAnBC,mBAAA,CA4BM,OAAAC,UAAA,GA3BJL,mBAAA,CASM,OATNM,UASM,GARJN,mBAAA,CAGM,OAHNO,UAGM,GAF2DL,KAAA,CAAAM,gBAAgB,I,cAA/EC,YAAA,CAC6EC,yBAAA;;IAD5DC,YAAY,EAAE,IAAI;IAAGC,UAAU,EAAE,KAAK;IAA0BC,KAAK,EAAC,OAAO;IAC7EC,OAAO,EAAEC,QAAA,CAAAC,oBAAoB;gBAAWd,KAAA,CAAAe,iBAAiB;+DAAjBf,KAAA,CAAAe,iBAAiB,GAAAC,MAAA;6FAE5ElB,mBAAA,CAGM,OAHNmB,UAGM,GAF2DjB,KAAA,CAAAkB,aAAa,I,cAA5EX,YAAA,CACmEC,yBAAA;;IADlDC,YAAY,EAAE,IAAI;IAAGC,UAAU,EAAE,KAAK;IAAuBC,KAAK,EAAC,cAAc;IACjFC,OAAO,EAAEZ,KAAA,CAAAkB,aAAa;gBAAWlB,KAAA,CAAAmB,cAAc;+DAAdnB,KAAA,CAAAmB,cAAc,GAAAH,MAAA;+FAIzDhB,KAAA,CAAAe,iBAAiB,IAAIf,KAAA,CAAAmB,cAAc,I,cAA9CjB,mBAAA,CAaM,OAAAkB,UAAA,GAZJtB,mBAAA,CAGM,OAHNuB,UAGM,GAFJC,UAA0C,EAC1CxB,mBAAA,CAAoC,WAAAyB,gBAAA,CAA9BvB,KAAA,CAAAe,iBAAiB,CAACJ,KAAK,iB,GAG/Bb,mBAAA,CAAgH;IAAxGF,KAAK,EAAC,qBAAqB;IAAE4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAT,MAAA,IAAEH,QAAA,CAAAa,QAAQ,CAAC1B,KAAA,CAAAe,iBAAiB,EAACf,KAAA,CAAAmB,cAAc;KAAG,iBAAe,GAGvGrB,mBAAA,CAGM,OAHN6B,UAGM,GAFJC,UAAuC,EACvC9B,mBAAA,CAAwC,WAAAyB,gBAAA,CAAlCvB,KAAA,CAAAmB,cAAc,CAACU,YAAY,iB,6DAMvC3B,mBAAA,CAEM,OAAA4B,WAAA,EAAAC,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}