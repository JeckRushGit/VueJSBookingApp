{"ast":null,"code":"import { toRaw } from \"vue\";\nclass MyClass {\n  constructor(data) {}\n}\nexport default {\n  name: \"CalendarView\",\n  props: {\n    data: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      myObj: null\n    };\n  },\n  created() {\n    this.calendarLogic(toRaw(this.data));\n  },\n  mounted() {\n    this.Foo();\n  },\n  watch: {\n    data: function (newVal, oldVal) {\n      this.calendarLogic(toRaw(newVal));\n      this.Foo();\n    }\n  },\n  methods: {\n    Foo() {\n      let month = toRaw(this.data).month;\n      let days = Object.getOwnPropertyNames(toRaw(this.myObj.days)).sort();\n      const table = this.$refs[\"my-table\"];\n      const calLogi = toRaw(this.myObj);\n      for (let i = 0; i < table.rows.length; i++) {\n        const row = table.rows[i];\n        // Loop through the columns of the row\n        if (i === 0) {\n          this.fillHeadRow(row);\n        }\n        if (i !== 0) {\n          for (let j = 1; j < 6; j++) {\n            let hour = row.cells[0].innerHTML;\n            let dayIsAvailable = calLogi.days[days[j - 1]][hour];\n            const cell = row.insertCell(j);\n            if (dayIsAvailable) {\n              cell.classList.add('bg-success');\n              cell.addEventListener('click', function () {\n                const month = toRaw(this.data);\n                const day = days[j - 1];\n                console.log(day, hour, month);\n              });\n            } else {\n              cell.classList.add('table-default');\n            }\n          }\n        }\n      }\n    },\n    fillHeadRow(headRow) {\n      let days = Object.getOwnPropertyNames(toRaw(this.myObj.days)).sort();\n      console.log(days);\n      for (let i = 0; i < 6; i++) {\n        const cell = headRow.insertCell(i);\n        if (i === 0) {\n          cell.innerHTML = '#';\n        }\n        switch (i) {\n          case 1:\n            cell.innerHTML = 'Monday' + \" \" + days[i - 1];\n            break;\n          case 2:\n            cell.innerHTML = 'Tuesday' + \" \" + days[i - 1];\n            break;\n          case 3:\n            cell.innerHTML = 'Wednesday' + \" \" + days[i - 1];\n            break;\n          case 4:\n            cell.innerHTML = 'Thursday' + \" \" + days[i - 1];\n            break;\n          case 5:\n            cell.innerHTML = 'Friday' + \" \" + days[i - 1];\n            break;\n        }\n      }\n    },\n    calendarLogic(rawData) {\n      let obj = {\n        days: {}\n      };\n\n      //setta prima tutti i giorni a false\n      for (let i = 0; i < rawData.length; i++) {\n        obj.days[rawData[i].day] = {\n          '15:00-16:00': false,\n          '16:00-17:00': false,\n          '17:00-18:00': false,\n          '18:00-19:00': false\n        };\n      }\n\n      //setta i giorni a true disponibili all'utente per quel corso di quel professor\n      for (let i = 0; i < rawData.length; i++) {\n        obj.days[rawData[i].day][rawData[i].hour] = true;\n      }\n      console.log(obj);\n      this.myObj = obj;\n    }\n  }\n};","map":{"version":3,"names":["toRaw","MyClass","constructor","data","name","props","required","myObj","created","calendarLogic","mounted","Foo","watch","newVal","oldVal","methods","month","days","Object","getOwnPropertyNames","sort","table","$refs","calLogi","i","rows","length","row","fillHeadRow","j","hour","cells","innerHTML","dayIsAvailable","cell","insertCell","classList","add","addEventListener","day","console","log","headRow","rawData","obj"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n    <thead>\r\n      <tr>\r\n\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <th scope=\"row\">15:00-16:00</th>\r\n<!--        <td class=\"bg-success\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">16:00-17:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">17:00-18:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">18:00-19:00</th>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\n\r\nclass MyClass{\r\n  constructor(data) {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  props : {\r\n    data : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      myObj : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.Foo();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.Foo();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    Foo(){\r\n      let month = toRaw(this.data).month;\r\n      let days = Object.getOwnPropertyNames(toRaw(this.myObj.days)).sort();\r\n      const table = this.$refs[\"my-table\"];\r\n      const calLogi = toRaw(this.myObj);\r\n      for (let i = 0; i < table.rows.length; i++) {\r\n        const row = table.rows[i];\r\n        // Loop through the columns of the row\r\n        if(i === 0){\r\n          this.fillHeadRow(row)\r\n        }\r\n        if(i !== 0){\r\n          for (let j = 1; j < 6; j++) {\r\n            let hour = row.cells[0].innerHTML;\r\n            let dayIsAvailable = calLogi.days[days[j-1]][hour];\r\n            const cell = row.insertCell(j);\r\n            if(dayIsAvailable){\r\n              cell.classList.add('bg-success');\r\n              cell.addEventListener('click',function (){\r\n                const month = toRaw(this.data);\r\n                const day = days[j-1];\r\n                console.log(day,hour,month);\r\n              })\r\n            }\r\n            else{\r\n              cell.classList.add('table-default');\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = Object.getOwnPropertyNames(toRaw(this.myObj.days)).sort();\r\n      console.log(days);\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      let obj = {days : {}};\r\n\r\n      //setta prima tutti i giorni a false\r\n      for(let i = 0; i < rawData.length ; i++){\r\n        obj.days[rawData[i].day] = {\r\n          '15:00-16:00' : false,\r\n          '16:00-17:00' : false,\r\n          '17:00-18:00' : false,\r\n          '18:00-19:00' : false,\r\n        };\r\n      }\r\n\r\n\r\n      //setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n      for(let i = 0; i < rawData.length ; i++){\r\n        obj.days[rawData[i].day][rawData[i].hour] = true;\r\n      }\r\n      console.log(obj);\r\n      this.myObj = obj;\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}