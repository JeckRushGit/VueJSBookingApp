{"ast":null,"code":"import { toRaw } from \"vue\";\nimport axios from \"axios\";\nimport CalendarPopUp from \"@/components/CalendarPopUp.vue\";\nexport default {\n  name: \"CalendarView\",\n  components: {\n    CalendarPopUp\n  },\n  props: {\n    data: {\n      required: true\n    },\n    callback: {\n      required: true\n    },\n    days: {\n      required: true\n    },\n    month: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      isPopUpOpen: false,\n      myObj: null,\n      selectedDay: null,\n      selectedHour: null,\n      selectedMonth: null,\n      selectedProfessor: null,\n      selectedCourseTitol: null\n    };\n  },\n  created() {\n    this.calendarLogic(toRaw(this.data));\n  },\n  mounted() {\n    this.createTable();\n  },\n  watch: {\n    data: function (newVal, oldVal) {\n      this.calendarLogic(toRaw(newVal));\n      this.updateTable();\n    }\n  },\n  methods: {\n    createTable() {\n      try {\n        let month = toRaw(this.month);\n        let professorEmail = toRaw(this.data)[0].professor.email;\n        let professorInfo = toRaw(this.data)[0].professor;\n        let courseTitol = toRaw(this.data)[0].course.course_titol;\n        let days = toRaw(this.days);\n        const table = this.$refs[\"my-table\"];\n        const calendarLogic = toRaw(this.myObj);\n        for (let i = 0; i < table.rows.length; i++) {\n          const row = table.rows[i];\n          // Loop through the columns of the row\n          if (i === 0) {\n            this.fillHeadRow(row);\n          }\n          if (i !== 0) {\n            for (let j = 1; j < 6; j++) {\n              let hour = row.cells[0].innerHTML;\n              let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\n              const cell = row.insertCell(j);\n              if (dayIsAvailable) {\n                cell.classList.add('bg-success');\n                cell.addEventListener('click', async function () {\n                  const day = days[j - 1];\n                  this.isPopUpOpen = true;\n                  this.selectedDay = day;\n                  this.selectedHour = hour;\n                  this.selectedMonth = month;\n                  this.selectedProfessor = professorInfo;\n                  this.selectedCourseTitol = courseTitol;\n                  // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\n                }.bind(this), false);\n              } else {\n                cell.classList.add('table-default');\n              }\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    updateTable() {\n      let month = toRaw(this.month);\n      let professorInfo = toRaw(this.data)[0].professor;\n      let courseTitol = toRaw(this.data)[0].course.course_titol;\n      const table = this.$refs[\"my-table\"];\n      const calendarLogic = toRaw(this.myObj);\n      let days = toRaw(this.days);\n      for (let i = 1; i < table.rows.length; i++) {\n        const row = table.rows[i];\n        for (let j = 1; j < 6; j++) {\n          let hour = row.cells[0].innerHTML;\n          let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\n          let old_cell = row.cells[j];\n          let new_cell = old_cell.cloneNode(true);\n          old_cell.parentNode.replaceChild(new_cell, old_cell);\n          if (dayIsAvailable) {\n            new_cell.className = \"bg-success\";\n            new_cell.addEventListener('click', async function () {\n              const day = days[j - 1];\n              this.isPopUpOpen = true;\n              this.selectedDay = day;\n              this.selectedHour = hour;\n              this.selectedMonth = month;\n              this.selectedProfessor = professorInfo;\n              this.selectedCourseTitol = courseTitol;\n              // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\n            }.bind(this), false);\n          } else {\n            new_cell.className = \"table-default\";\n          }\n          // cell.className = \"bg-success\";\n        }\n      }\n    },\n\n    async handleSubmitLesson(day, hour, month, professorEmail, courseTitol) {\n      try {\n        const response = await axios.post('ServletBookTeaching', null, {\n          params: {\n            action: 'web',\n            professorEmail: professorEmail,\n            courseTitol: courseTitol,\n            day: day,\n            month: month,\n            hour: hour\n          }\n        });\n        this.callback();\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    fillHeadRow(headRow) {\n      let days = toRaw(this.days);\n      for (let i = 0; i < 6; i++) {\n        const cell = headRow.insertCell(i);\n        if (i === 0) {\n          cell.innerHTML = '#';\n        }\n        switch (i) {\n          case 1:\n            cell.innerHTML = 'Monday' + \" \" + days[i - 1];\n            break;\n          case 2:\n            cell.innerHTML = 'Tuesday' + \" \" + days[i - 1];\n            break;\n          case 3:\n            cell.innerHTML = 'Wednesday' + \" \" + days[i - 1];\n            break;\n          case 4:\n            cell.innerHTML = 'Thursday' + \" \" + days[i - 1];\n            break;\n          case 5:\n            cell.innerHTML = 'Friday' + \" \" + days[i - 1];\n            break;\n        }\n      }\n    },\n    calendarLogic(rawData) {\n      try {\n        let obj = {\n          days: {}\n        };\n        let days = toRaw(this.days);\n\n        //setta prima tutti i giorni a false\n\n        for (let i = 0; i < days.length; i++) {\n          obj.days[days[i]] = {\n            '15:00-16:00': false,\n            '16:00-17:00': false,\n            '17:00-18:00': false,\n            '18:00-19:00': false\n          };\n        }\n\n        //        setta i giorni a true disponibili all'utente per quel corso di quel professor\n        for (let i = 0; i < rawData.length; i++) {\n          obj.days[rawData[i].day][rawData[i].hour] = true;\n        }\n        this.myObj = obj;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    onClickAway(event) {\n      this.isPopUpOpen = false;\n    }\n  }\n};","map":{"version":3,"names":["toRaw","axios","CalendarPopUp","name","components","props","data","required","callback","days","month","isPopUpOpen","myObj","selectedDay","selectedHour","selectedMonth","selectedProfessor","selectedCourseTitol","created","calendarLogic","mounted","createTable","watch","newVal","oldVal","updateTable","methods","professorEmail","professor","email","professorInfo","courseTitol","course","course_titol","table","$refs","i","rows","length","row","fillHeadRow","j","hour","cells","innerHTML","dayIsAvailable","cell","insertCell","classList","add","addEventListener","day","bind","e","console","error","old_cell","new_cell","cloneNode","parentNode","replaceChild","className","handleSubmitLesson","response","post","params","action","headRow","rawData","obj","onClickAway","event"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n    <thead>\r\n      <tr>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <th scope=\"row\">15:00-16:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">16:00-17:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">17:00-18:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">18:00-19:00</th>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n<!--  <Teleport to=\"#calendarpopup\">-->\r\n<!--    <div class=\"modal-bg d-flex justify-content-center align-items-center\" v-if=\"isPopUpOpen\">-->\r\n<!--      <div class=\"my-modal position-relative\" v-click-away=\"onClickAway\">-->\r\n<!--        <button type=\"button\" class=\"btn-close m-2 position-absolute top-0 end-0\" aria-label=\"Close\"-->\r\n<!--                @click=\"isPopUpOpen = false\"></button>-->\r\n<!--        <p>Are you sure you want to reserve the lesson held by {{selectedProfessor.name+\" \"+selectedProfessor.surname}} on {{selectedDay+\"/\"+selectedMonth}} at {{selectedHour}} of {{selectedCourseTitol}} ?</p>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </Teleport>-->\r\n  <CalendarPopUp :selected-professor=\"selectedProfessor\" :selected-course-titol=\"selectedProfessor\" :selected-day=\"selectedDay\" :selected-hour=\"selectedHour\" :selected-month=\"selectedMonth\"/>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\nimport axios from \"axios\";\r\nimport CalendarPopUp from \"@/components/CalendarPopUp.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  components: {CalendarPopUp},\r\n  props : {\r\n    data : {\r\n      required : true\r\n    },\r\n    callback :{\r\n      required: true\r\n    },\r\n    days : {\r\n      required : true\r\n    },\r\n    month : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      isPopUpOpen : false,\r\n      myObj : null,\r\n      selectedDay : null,\r\n      selectedHour : null,\r\n      selectedMonth : null,\r\n      selectedProfessor : null,\r\n      selectedCourseTitol : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.createTable();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.updateTable();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    createTable(){\r\n      try {\r\n        let month = toRaw(this.month);\r\n        let professorEmail = toRaw(this.data)[0].professor.email;\r\n        let professorInfo = toRaw(this.data)[0].professor;\r\n        let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n        let days = toRaw(this.days);\r\n        const table = this.$refs[\"my-table\"];\r\n        const calendarLogic = toRaw(this.myObj);\r\n        for (let i = 0; i < table.rows.length; i++) {\r\n          const row = table.rows[i];\r\n          // Loop through the columns of the row\r\n          if (i === 0) {\r\n            this.fillHeadRow(row)\r\n          }\r\n          if (i !== 0) {\r\n            for (let j = 1; j < 6; j++) {\r\n              let hour = row.cells[0].innerHTML;\r\n              let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n              const cell = row.insertCell(j);\r\n              if (dayIsAvailable) {\r\n                cell.classList.add('bg-success');\r\n                cell.addEventListener('click', async function () {\r\n                  const day = days[j - 1];\r\n                  this.isPopUpOpen = true;\r\n                  this.selectedDay = day;\r\n                  this.selectedHour = hour;\r\n                  this.selectedMonth = month;\r\n                  this.selectedProfessor = professorInfo;\r\n                  this.selectedCourseTitol = courseTitol;\r\n                  // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n                }.bind(this), false);\r\n              } else {\r\n                cell.classList.add('table-default');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    updateTable(){\r\n      let month = toRaw(this.month);\r\n      let professorInfo = toRaw(this.data)[0].professor;\r\n      let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n      const table = this.$refs[\"my-table\"];\r\n      const calendarLogic = toRaw(this.myObj);\r\n      let days = toRaw(this.days);\r\n      for(let i = 1 ; i < table.rows.length ; i++){\r\n        const row = table.rows[i];\r\n        for(let j = 1 ; j < 6 ; j++){\r\n          let hour = row.cells[0].innerHTML;\r\n          let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n          let old_cell = row.cells[j];\r\n          let new_cell = old_cell.cloneNode(true);\r\n          old_cell.parentNode.replaceChild(new_cell,old_cell);\r\n          if(dayIsAvailable){\r\n            new_cell.className = \"bg-success\";\r\n            new_cell.addEventListener('click', async function () {\r\n              const day = days[j - 1];\r\n              this.isPopUpOpen = true;\r\n              this.selectedDay = day;\r\n              this.selectedHour = hour;\r\n              this.selectedMonth = month;\r\n              this.selectedProfessor = professorInfo;\r\n              this.selectedCourseTitol = courseTitol;\r\n              // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n            }.bind(this), false);\r\n          }else{\r\n            new_cell.className = \"table-default\";\r\n          }\r\n          // cell.className = \"bg-success\";\r\n        }\r\n      }\r\n\r\n\r\n    },\r\n\r\n    async handleSubmitLesson(day,hour,month,professorEmail,courseTitol){\r\n      try {\r\n        const response = await axios.post('ServletBookTeaching',null,{params : {action : 'web',professorEmail : professorEmail,courseTitol : courseTitol,day : day,month : month,hour : hour}});\r\n        this.callback();\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = toRaw(this.days);\r\n\r\n\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      try {\r\n        let obj = {days : {}};\r\n        let days = toRaw(this.days);\r\n\r\n        //setta prima tutti i giorni a false\r\n\r\n        for(let i = 0 ; i < days.length ; i++){\r\n          obj.days[days[i]] = {\r\n            '15:00-16:00' : false,\r\n            '16:00-17:00' : false,\r\n            '17:00-18:00' : false,\r\n            '18:00-19:00' : false,\r\n          };\r\n        }\r\n\r\n\r\n//        setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n        for(let i = 0; i < rawData.length ; i++){\r\n          obj.days[rawData[i].day][rawData[i].hour] = true;\r\n        }\r\n\r\n        this.myObj = obj;\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    onClickAway(event) {\r\n      this.isPopUpOpen = false;\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}