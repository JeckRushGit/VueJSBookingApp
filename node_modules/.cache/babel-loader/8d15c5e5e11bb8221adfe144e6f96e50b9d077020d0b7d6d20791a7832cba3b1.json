{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"my-table\",\n  class: \"table table-striped table-responsive table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"tbody\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"15:00-16:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"16:00-17:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"17:00-18:00\")]), /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"row\"\n}, \"18:00-19:00\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarPopUp = _resolveComponent(\"CalendarPopUp\");\n  const _component_FeedBackPopUp = _resolveComponent(\"FeedBackPopUp\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"table\", _hoisted_1, _hoisted_4, 512 /* NEED_PATCH */), $data.isPopUpOpen && $data.user ? (_openBlock(), _createBlock(_component_CalendarPopUp, {\n    key: 0,\n    \"call-back-close-pop-up\": $options.closePopUp,\n    \"selected-professor\": $data.selectedProfessor,\n    \"selected-course-titol\": $data.selectedCourseTitol,\n    \"selected-day\": $data.selectedDay,\n    \"selected-hour\": $data.selectedHour,\n    \"selected-month\": $data.selectedMonth,\n    \"selected-cell\": $data.selectedCell,\n    \"call-back-open-feed-back\": $options.opencloseFeedBackPopUp,\n    \"call-back-feed-back-message\": $options.setFeedBackMessage\n  }, null, 8 /* PROPS */, [\"call-back-close-pop-up\", \"selected-professor\", \"selected-course-titol\", \"selected-day\", \"selected-hour\", \"selected-month\", \"selected-cell\", \"call-back-open-feed-back\", \"call-back-feed-back-message\"])) : _createCommentVNode(\"v-if\", true), $data.isPopUpFeedBackOpen && !$data.isPopUpOpen ? (_openBlock(), _createBlock(_component_FeedBackPopUp, {\n    key: 1,\n    stringalert: $data.feedBackMessage,\n    \"call-back-close-pop-up\": $options.opencloseFeedBackPopUp,\n    \"teleport-tag\": '#calendarpopup'\n  }, null, 8 /* PROPS */, [\"stringalert\", \"call-back-close-pop-up\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","class","_createElementVNode","scope","_hoisted_2","_hoisted_3","_hoisted_1","_hoisted_4","$data","isPopUpOpen","user","_createBlock","_component_CalendarPopUp","$options","closePopUp","selectedProfessor","selectedCourseTitol","selectedDay","selectedHour","selectedMonth","selectedCell","opencloseFeedBackPopUp","setFeedBackMessage","isPopUpFeedBackOpen","_component_FeedBackPopUp","stringalert","feedBackMessage"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n    <thead>\r\n      <tr>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <th scope=\"row\">15:00-16:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">16:00-17:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">17:00-18:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">18:00-19:00</th>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <CalendarPopUp v-if=\"isPopUpOpen && user\" :call-back-close-pop-up=\"closePopUp\" :selected-professor=\"selectedProfessor\" :selected-course-titol=\"selectedCourseTitol\" :selected-day=\"selectedDay\" :selected-hour=\"selectedHour\" :selected-month=\"selectedMonth\" :selected-cell=\"selectedCell\" :call-back-open-feed-back=\"opencloseFeedBackPopUp\" :call-back-feed-back-message=\"setFeedBackMessage\"/>\r\n  <FeedBackPopUp v-if=\"isPopUpFeedBackOpen && !isPopUpOpen\" :stringalert=\"feedBackMessage\" :call-back-close-pop-up=\"opencloseFeedBackPopUp\" :teleport-tag=\"'#calendarpopup'\"/>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\nimport axios from \"axios\";\r\nimport CalendarPopUp from \"@/components/CalendarPopUp.vue\";\r\nimport FeedBackPopUp from \"@/components/FeedBackPopUp.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  components: {FeedBackPopUp, CalendarPopUp},\r\n  props : {\r\n    data : {\r\n      required : true\r\n    },\r\n    callback :{\r\n      required: true\r\n    },\r\n    days : {\r\n      required : true\r\n    },\r\n    month : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      isPopUpOpen : false,\r\n      isPopUpFeedBackOpen : false,\r\n      myObj : null,\r\n      selectedDay : null,\r\n      selectedHour : null,\r\n      selectedMonth : null,\r\n      selectedProfessor : null,\r\n      selectedCourseTitol : null,\r\n      selectedCell : null,\r\n      feedBackMessage : '',\r\n      user : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.user = this.$store.getters.userdata;\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.createTable();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.updateTable();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n\r\n    closePopUp(){\r\n      this.isPopUpOpen = false;\r\n    },\r\n\r\n    opencloseFeedBackPopUp(flag){\r\n      this.isPopUpFeedBackOpen = flag;\r\n    },\r\n\r\n    setFeedBackMessage(string){\r\n      this.feedBackMessage = string;\r\n    },\r\n\r\n    createTable(){\r\n      try {\r\n        let month = toRaw(this.month);\r\n        let professorInfo = toRaw(this.data)[0].professor;\r\n        let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n        let days = toRaw(this.days);\r\n        const table = this.$refs[\"my-table\"];\r\n        const calendarLogic = toRaw(this.myObj);\r\n        for (let i = 0; i < table.rows.length; i++) {\r\n          const row = table.rows[i];\r\n          // Loop through the columns of the row\r\n          if (i === 0) {\r\n            this.fillHeadRow(row)\r\n          }\r\n          if (i !== 0) {\r\n            for (let j = 1; j < 6; j++) {\r\n              let hour = row.cells[0].innerHTML;\r\n              let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n              const cell = row.insertCell(j);\r\n              if (dayIsAvailable) {\r\n                cell.classList.add('bg-success');\r\n                cell.addEventListener('click', async function () {\r\n                  const day = days[j - 1];\r\n                  this.isPopUpOpen = true;\r\n                  this.selectedDay = day;\r\n                  this.selectedHour = hour;\r\n                  this.selectedMonth = month;\r\n                  this.selectedProfessor = professorInfo;\r\n                  this.selectedCourseTitol = courseTitol;\r\n                  this.selectedCell = cell;\r\n                  // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n                }.bind(this), false);\r\n              } else {\r\n                cell.classList.add('table-default');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    updateTable(){\r\n      let month = toRaw(this.month);\r\n      let professorInfo = toRaw(this.data)[0].professor;\r\n      let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n      const table = this.$refs[\"my-table\"];\r\n      const calendarLogic = toRaw(this.myObj);\r\n      let days = toRaw(this.days);\r\n      for(let i = 1 ; i < table.rows.length ; i++){\r\n        const row = table.rows[i];\r\n        for(let j = 1 ; j < 6 ; j++){\r\n          let hour = row.cells[0].innerHTML;\r\n          let dayIsAvailable = calendarLogic.days[days[j - 1]][hour];\r\n          let old_cell = row.cells[j];\r\n          let new_cell = old_cell.cloneNode(true);\r\n          old_cell.parentNode.replaceChild(new_cell,old_cell);\r\n          if(dayIsAvailable){\r\n            new_cell.className = \"bg-success\";\r\n            new_cell.addEventListener('click', async function () {\r\n              const day = days[j - 1];\r\n              this.isPopUpOpen = true;\r\n              this.selectedDay = day;\r\n              this.selectedHour = hour;\r\n              this.selectedMonth = month;\r\n              this.selectedProfessor = professorInfo;\r\n              this.selectedCourseTitol = courseTitol;\r\n              this.selectedCell = new_cell;\r\n              // await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n            }.bind(this), false);\r\n          }else{\r\n            new_cell.className = \"table-default\";\r\n          }\r\n          // cell.className = \"bg-success\";\r\n        }\r\n      }\r\n\r\n\r\n    },\r\n\r\n    async handleSubmitLesson(day,hour,month,professorEmail,courseTitol){\r\n      try {\r\n        const response = await axios.post('ServletBookTeaching',null,{params : {action : 'web',professorEmail : professorEmail,courseTitol : courseTitol,day : day,month : month,hour : hour}});\r\n        this.callback();\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = toRaw(this.days);\r\n\r\n\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      try {\r\n        let obj = {days : {}};\r\n        let days = toRaw(this.days);\r\n\r\n        //setta prima tutti i giorni a false\r\n\r\n        for(let i = 0 ; i < days.length ; i++){\r\n          obj.days[days[i]] = {\r\n            '15:00-16:00' : false,\r\n            '16:00-17:00' : false,\r\n            '17:00-18:00' : false,\r\n            '18:00-19:00' : false,\r\n          };\r\n        }\r\n\r\n\r\n//        setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n        for(let i = 0; i < rawData.length ; i++){\r\n          obj.days[rawData[i].day][rawData[i].hour] = true;\r\n        }\r\n\r\n        this.myObj = obj;\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    onClickAway(event) {\r\n      this.isPopUpOpen = false;\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";;EACSA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;gCAC1BC,mBAAA,CAGQ,gB,aAFNA,mBAAA,CACK,M;gCAEPA,mBAAA,CAaQ,gB,aAZNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E,gBAE7BD,mBAAA,CAEK,a,aADHA,mBAAA,CAAgC;EAA5BC,KAAK,EAAC;AAAK,GAAC,aAAW,E;oBAf/BC,UAGQ,EACRC,UAaQ,C;;;;6DAlBVH,mBAAA,CAmBQ,SAnBRI,UAmBQ,EAAAC,UAAA,yBACaC,KAAA,CAAAC,WAAW,IAAID,KAAA,CAAAE,IAAI,I,cAAxCC,YAAA,CAAkYC,wBAAA;;IAAvV,wBAAsB,EAAEC,QAAA,CAAAC,UAAU;IAAG,oBAAkB,EAAEN,KAAA,CAAAO,iBAAiB;IAAG,uBAAqB,EAAEP,KAAA,CAAAQ,mBAAmB;IAAG,cAAY,EAAER,KAAA,CAAAS,WAAW;IAAG,eAAa,EAAET,KAAA,CAAAU,YAAY;IAAG,gBAAc,EAAEV,KAAA,CAAAW,aAAa;IAAG,eAAa,EAAEX,KAAA,CAAAY,YAAY;IAAG,0BAAwB,EAAEP,QAAA,CAAAQ,sBAAsB;IAAG,6BAA2B,EAAER,QAAA,CAAAS;0QACxVd,KAAA,CAAAe,mBAAmB,KAAKf,KAAA,CAAAC,WAAW,I,cAAxDE,YAAA,CAA4Ka,wBAAA;;IAAjHC,WAAW,EAAEjB,KAAA,CAAAkB,eAAe;IAAG,wBAAsB,EAAEb,QAAA,CAAAQ,sBAAsB;IAAG,cAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}