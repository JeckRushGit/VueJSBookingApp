{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"m-5\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.users ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    label: \"email\",\n    options: $options.userData,\n    modelValue: $data.selectedUser,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedUser = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","users","_createBlock","_component_VueMultiselect","label","options","$options","userData","selectedUser","$event"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AdminRemoveLessons.vue"],"sourcesContent":["<template>\r\n  <div class=\"m-5\">\r\n    <div style=\"width: 400px\">\r\n      <VueMultiselect v-if=\"users\" label=\"email\" :options=\"userData\" v-model=\"selectedUser\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AdminRemoveLessons\",\r\n  components: {\r\n    VueMultiselect\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchUsers();\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      users: null,\r\n      selectedUser: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings', {\r\n          params: {\r\n            action: 'getListOfUsers',\r\n            device: 'web'\r\n          }\r\n        });\r\n        this.users = response.data;\r\n        console.log(response.data);\r\n      } catch (e) {\r\n        console.error(e.response);\r\n        if (e.response.status === 401) {\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    },\r\n\r\n    async fetchBookingsForUser(selectedUser) {\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings', {\r\n          params: {\r\n            action: 'getBookingsForUser',\r\n            device: 'web',\r\n            userEmail: selectedUser.email\r\n          }\r\n        });\r\n        console.log(response.data);\r\n      } catch (e) {\r\n        console.error(e.response);\r\n        if (e.response.status === 401) {\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    userData : function (){\r\n      return this.users.map(function (item){\r\n        return item.email+' '+item.name;\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    users(newUsers, oldUsers) {\r\n      this.selectedUser = newUsers[0];\r\n    },\r\n    selectedUser(newSelectedUser, oldSelectedUser) {\r\n      this.fetchBookingsForUser(newSelectedUser);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EACTC,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;uBAD3BC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAEM,OAFNC,UAEM,GADkBC,KAAA,CAAAC,KAAK,I,cAA3BC,YAAA,CAAuFC,yBAAA;;IAA1DC,KAAK,EAAC,OAAO;IAAEC,OAAO,EAAEC,QAAA,CAAAC,QAAQ;gBAAWP,KAAA,CAAAQ,YAAY;+DAAZR,KAAA,CAAAQ,YAAY,GAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}