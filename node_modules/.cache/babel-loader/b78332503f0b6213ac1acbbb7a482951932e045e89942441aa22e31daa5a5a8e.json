{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"d-flex flex-column justify-content-between align-items-center\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $options.userData ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    options: $options.userData,\n    modelValue: $data.selectedUser,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedUser = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h2\", null, \"List for : \" + _toDisplayString($data.selectedUser.name + \" \" + $data.selectedUser.surname), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","$options","userData","_createBlock","_component_VueMultiselect","options","$data","selectedUser","$event","_toDisplayString","name","surname"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AdminRemoveLessons.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex flex-column justify-content-between align-items-center\"></div>\r\n  <VueMultiselect v-if=\"userData\" :options=\"userData\" v-model=\"selectedUser\"/>\r\n  <h2>List for : {{selectedUser.name+\" \"+selectedUser.surname}}</h2>\r\n</template>\r\n\r\n<script>\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"AdminRemoveLessons\",\r\n  components : {\r\n    VueMultiselect\r\n  },\r\n\r\n  async created(){\r\n    await this.fetchUsers();\r\n  },\r\n\r\n  data(){\r\n    return{\r\n      users : null,\r\n      selectedUser : null\r\n    }\r\n  },\r\n  methods : {\r\n    async fetchUsers(){\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings',{params : {action : 'getListOfUsers',device : 'web'}});\r\n        this.users = response.data;\r\n        console.log(response.data);\r\n      }catch (e){\r\n        console.error(e.response);\r\n        if(e.response.status === 401){\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    },\r\n\r\n    async fetchBookingsForUser(selectedUser){\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings',{params : {action : 'getBookingsForUser',device : 'web',userEmail : selectedUser.email}});\r\n        console.log(response.data);\r\n      }catch (e){\r\n        console.error(e.response);\r\n        if(e.response.status === 401){\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed : {\r\n    userData(){\r\n      return this.users;\r\n    },\r\n  },\r\n  watch : {\r\n    users(newUsers,oldUsers){\r\n      this.selectedUser = newUsers[0];\r\n    },\r\n\r\n    selectedUser(newSelectedUser,oldSelectedUser){\r\n      this.fetchBookingsForUser(newSelectedUser);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";gCACEA,mBAAA,CAAiF;EAA5EC,KAAK,EAAC;AAA+D;;;;6DAA1EC,UAAiF,EAC3DC,QAAA,CAAAC,QAAQ,I,cAA9BC,YAAA,CAA4EC,yBAAA;;IAA3CC,OAAO,EAAEJ,QAAA,CAAAC,QAAQ;gBAAWI,KAAA,CAAAC,YAAY;+DAAZD,KAAA,CAAAC,YAAY,GAAAC,MAAA;2FACzEV,mBAAA,CAAkE,YAA9D,aAAW,GAAAW,gBAAA,CAAEH,KAAA,CAAAC,YAAY,CAACG,IAAI,SAAKJ,KAAA,CAAAC,YAAY,CAACI,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}