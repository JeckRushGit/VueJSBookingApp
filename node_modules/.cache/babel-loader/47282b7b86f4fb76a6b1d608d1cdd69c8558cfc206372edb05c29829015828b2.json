{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex justify-content-around align-items-center\",\n  style: {\n    \"border\": \"solid black\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"mt-5\",\n  style: {\n    \"width\": \"400px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"mt-5\",\n  style: {\n    \"width\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"  <button @click=\\\"fetchProfessors\\\">Premi</button>\"), _createCommentVNode(\"  <button @click=\\\"fetchCourses('pippo@gmail.com')\\\">Premi2</button>\"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.listOfProfessors ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    hideSelected: true,\n    allowEmpty: false,\n    label: \"label\",\n    options: $options.listOfProfessorLogic,\n    modelValue: $data.selectedProfessor,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProfessor = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_3, [$data.listOfCourses ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    hideSelected: true,\n    allowEmpty: false,\n    label: \"course_titol\",\n    options: $data.listOfCourses,\n    modelValue: $data.selectedCourse,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedCourse = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","$data","listOfProfessors","_createBlock","_component_VueMultiselect","hideSelected","allowEmpty","label","options","$options","listOfProfessorLogic","selectedProfessor","$event","_hoisted_3","listOfCourses","selectedCourse"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AddTeachingsPage.vue"],"sourcesContent":["<template>\r\n  <!--  <button @click=\"fetchProfessors\">Premi</button>-->\r\n  <!--  <button @click=\"fetchCourses('pippo@gmail.com')\">Premi2</button>-->\r\n  <div class=\"d-flex justify-content-around align-items-center\" style=\"border: solid black\">\r\n    <div class=\"mt-5\" style=\"width: 400px\">\r\n      <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfProfessors\" label=\"label\"\r\n                      :options=\"listOfProfessorLogic\" v-model=\"selectedProfessor\"/>\r\n    </div>\r\n\r\n    <div class=\"mt-5\" style=\"width: 400px;\">\r\n      <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfCourses\" label=\"course_titol\"\r\n                      :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\r\n\r\nexport default {\r\n  name: \"AddTeachingsPage\",\r\n  components: {VueMultiselect},\r\n  data() {\r\n    return {\r\n      listOfProfessors: null,\r\n      selectedProfessor: null,\r\n      listOfCourses: null,\r\n      selectedCourse: null,\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchProfessors();\r\n  },\r\n  methods: {\r\n    async fetchProfessors() {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {params: {action: 'getProfessors'}})\r\n        this.listOfProfessors = response.data;\r\n\r\n      } catch (e) {\r\n        console.log(e.response)\r\n      }\r\n    },\r\n    async fetchCourses(professor) {\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests', {\r\n          params: {\r\n            action: 'getCourses',\r\n            professorEmail: professor.email\r\n          }\r\n        });\r\n        this.listOfCourses = response.data;\r\n\r\n      } catch (e) {\r\n        console.log(e.response)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    listOfProfessors(newList, oldList) {\r\n      this.selectedProfessor = this.listOfProfessorLogic[0];\r\n    },\r\n\r\n    async selectedProfessor(newProfessor, oldProfessor) {\r\n      await this.fetchCourses(newProfessor.info)\r\n    },\r\n    listOfCourses(newList, oldList) {\r\n      this.selectedCourse = newList[0];\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    listOfProfessorLogic() {\r\n      return this.listOfProfessors.map(function (professor) {\r\n        return {label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\", info: professor};\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EAGOA,KAAK,EAAC,kDAAkD;EAACC,KAA2B,EAA3B;IAAA;EAAA;;;EACvDD,KAAK,EAAC,MAAM;EAACC,KAAoB,EAApB;IAAA;EAAA;;;EAKbD,KAAK,EAAC,MAAM;EAACC,KAAqB,EAArB;IAAA;EAAA;;;;6DARpBC,mBAAA,uDAAwD,EACxDA,mBAAA,wEAAyE,EACzEC,mBAAA,CAWM,OAXNC,UAWM,GAVJD,mBAAA,CAGM,OAHNE,UAGM,GAF2DC,KAAA,CAAAC,gBAAgB,I,cAA/EC,YAAA,CAC6EC,yBAAA;;IAD5DC,YAAY,EAAE,IAAI;IAAGC,UAAU,EAAE,KAAK;IAA0BC,KAAK,EAAC,OAAO;IAC7EC,OAAO,EAAEC,QAAA,CAAAC,oBAAoB;gBAAWT,KAAA,CAAAU,iBAAiB;+DAAjBV,KAAA,CAAAU,iBAAiB,GAAAC,MAAA;6FAG5Ed,mBAAA,CAGM,OAHNe,UAGM,GAF2DZ,KAAA,CAAAa,aAAa,I,cAA5EX,YAAA,CACmEC,yBAAA;;IADlDC,YAAY,EAAE,IAAI;IAAGC,UAAU,EAAE,KAAK;IAAuBC,KAAK,EAAC,cAAc;IACjFC,OAAO,EAAEP,KAAA,CAAAa,aAAa;gBAAWb,KAAA,CAAAc,cAAc;+DAAdd,KAAA,CAAAc,cAAc,GAAAH,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}