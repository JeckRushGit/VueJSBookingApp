{"ast":null,"code":"import { toRaw } from \"vue\";\nimport axios from \"axios\";\nclass MyClass {\n  constructor(data) {}\n}\nexport default {\n  name: \"CalendarView\",\n  props: {\n    data: {\n      required: true\n    },\n    callback: {\n      required: true\n    },\n    days: {\n      required: true\n    },\n    month: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      myObj: null\n    };\n  },\n  created() {\n    this.calendarLogic(toRaw(this.data));\n  },\n  mounted() {\n    this.Foo();\n  },\n  watch: {\n    data: function (newVal, oldVal) {\n      this.calendarLogic(toRaw(newVal));\n      this.Foo();\n    }\n  },\n  methods: {\n    Foo() {\n      try {\n        console.log(toRaw(JSON.stringify(this.cal)));\n        // let month = toRaw(this.month);\n        // let professorEmail = toRaw(this.data)[0].professor.email;\n        // let courseTitol = toRaw(this.data)[0].course.course_titol;\n        // let days = toRaw(this.days);\n        // const table = this.$refs[\"my-table\"];\n        // const calLogi = toRaw(this.myObj);\n        // for (let i = 0; i < table.rows.length; i++) {\n        //   const row = table.rows[i];\n        //   // Loop through the columns of the row\n        //   if (i === 0) {\n        //     this.fillHeadRow(row)\n        //   }\n        //   if (i !== 0) {\n        //     for (let j = 1; j < 6; j++) {\n        //       let hour = row.cells[0].innerHTML;\n        //       let dayIsAvailable = calLogi.days[days[j - 1]][hour];\n        //       const cell = row.insertCell(j);\n        //       if (dayIsAvailable) {\n        //         cell.classList.add('bg-success');\n        //         cell.addEventListener('click', async function () {\n        //           const day = days[j - 1];\n        //           console.log(day, hour, month, professorEmail, courseTitol);\n        //           await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\n        //         }.bind(this), false);\n        //       } else {\n        //         cell.classList.add('table-default');\n        //       }\n        //     }\n        //   }\n        // }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async handleSubmitLesson(day, hour, month, professorEmail, courseTitol) {\n      try {\n        const response = await axios.post('ServletBookTeaching', null, {\n          params: {\n            action: 'web',\n            professorEmail: professorEmail,\n            courseTitol: courseTitol,\n            day: day,\n            month: month,\n            hour: hour\n          }\n        });\n        this.callback();\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    fillHeadRow(headRow) {\n      let days = toRaw(this.days);\n      for (let i = 0; i < 6; i++) {\n        const cell = headRow.insertCell(i);\n        if (i === 0) {\n          cell.innerHTML = '#';\n        }\n        switch (i) {\n          case 1:\n            cell.innerHTML = 'Monday' + \" \" + days[i - 1];\n            break;\n          case 2:\n            cell.innerHTML = 'Tuesday' + \" \" + days[i - 1];\n            break;\n          case 3:\n            cell.innerHTML = 'Wednesday' + \" \" + days[i - 1];\n            break;\n          case 4:\n            cell.innerHTML = 'Thursday' + \" \" + days[i - 1];\n            break;\n          case 5:\n            cell.innerHTML = 'Friday' + \" \" + days[i - 1];\n            break;\n        }\n      }\n    },\n    calendarLogic(rawData) {\n      try {\n        let obj = {\n          days: {}\n        };\n\n        //setta prima tutti i giorni a false\n        for (let i = 0; i < rawData.length; i++) {\n          obj.days[rawData[i].day] = {\n            '15:00-16:00': false,\n            '16:00-17:00': false,\n            '17:00-18:00': false,\n            '18:00-19:00': false\n          };\n        }\n\n        //setta i giorni a true disponibili all'utente per quel corso di quel professor\n        // for(let i = 0; i < rawData.length ; i++){\n        //   obj.days[rawData[i].day][rawData[i].hour] = true;\n        // }\n\n        this.myObj = obj;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["toRaw","axios","MyClass","constructor","data","name","props","required","callback","days","month","myObj","created","calendarLogic","mounted","Foo","watch","newVal","oldVal","methods","console","log","JSON","stringify","cal","e","error","handleSubmitLesson","day","hour","professorEmail","courseTitol","response","post","params","action","fillHeadRow","headRow","i","cell","insertCell","innerHTML","rawData","obj","length"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\components\\CalendarView.vue"],"sourcesContent":["<template>\r\n  <table ref=\"my-table\" class=\"table table-striped table-responsive table-bordered\">\r\n    <thead>\r\n      <tr>\r\n\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <th scope=\"row\">15:00-16:00</th>\r\n<!--        <td class=\"bg-success\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n<!--        <td class=\"table-active\"></td>-->\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">16:00-17:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">17:00-18:00</th>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">18:00-19:00</th>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {toRaw} from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nclass MyClass{\r\n  constructor(data) {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: \"CalendarView\",\r\n  props : {\r\n    data : {\r\n      required : true\r\n    },\r\n    callback :{\r\n      required: true\r\n    },\r\n    days : {\r\n      required : true\r\n    },\r\n    month : {\r\n      required : true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      myObj : null\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.calendarLogic(toRaw(this.data));\r\n  },\r\n\r\n  mounted() {\r\n    this.Foo();\r\n  },\r\n\r\n  watch :{\r\n    data: function(newVal,oldVal){\r\n      this.calendarLogic(toRaw(newVal));\r\n      this.Foo();\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    Foo(){\r\n      try {\r\n\r\n        console.log(toRaw(JSON.stringify(this.cal)))\r\n        // let month = toRaw(this.month);\r\n        // let professorEmail = toRaw(this.data)[0].professor.email;\r\n        // let courseTitol = toRaw(this.data)[0].course.course_titol;\r\n        // let days = toRaw(this.days);\r\n        // const table = this.$refs[\"my-table\"];\r\n        // const calLogi = toRaw(this.myObj);\r\n        // for (let i = 0; i < table.rows.length; i++) {\r\n        //   const row = table.rows[i];\r\n        //   // Loop through the columns of the row\r\n        //   if (i === 0) {\r\n        //     this.fillHeadRow(row)\r\n        //   }\r\n        //   if (i !== 0) {\r\n        //     for (let j = 1; j < 6; j++) {\r\n        //       let hour = row.cells[0].innerHTML;\r\n        //       let dayIsAvailable = calLogi.days[days[j - 1]][hour];\r\n        //       const cell = row.insertCell(j);\r\n        //       if (dayIsAvailable) {\r\n        //         cell.classList.add('bg-success');\r\n        //         cell.addEventListener('click', async function () {\r\n        //           const day = days[j - 1];\r\n        //           console.log(day, hour, month, professorEmail, courseTitol);\r\n        //           await this.handleSubmitLesson(day, hour, month, professorEmail, courseTitol);\r\n        //         }.bind(this), false);\r\n        //       } else {\r\n        //         cell.classList.add('table-default');\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    async handleSubmitLesson(day,hour,month,professorEmail,courseTitol){\r\n      try {\r\n        const response = await axios.post('ServletBookTeaching',null,{params : {action : 'web',professorEmail : professorEmail,courseTitol : courseTitol,day : day,month : month,hour : hour}});\r\n        this.callback();\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n\r\n    fillHeadRow(headRow){\r\n\r\n      let days = toRaw(this.days);\r\n\r\n\r\n\r\n      for(let i = 0 ; i < 6; i++){\r\n        const cell = headRow.insertCell(i);\r\n        if(i === 0){\r\n          cell.innerHTML = '#';\r\n        }\r\n        switch (i){\r\n          case 1:\r\n            cell.innerHTML = 'Monday'+\" \"+days[i-1];\r\n            break;\r\n          case 2:\r\n            cell.innerHTML = 'Tuesday'+\" \"+days[i-1];\r\n            break;\r\n          case 3:\r\n            cell.innerHTML = 'Wednesday'+\" \"+days[i-1];\r\n            break;\r\n          case 4:\r\n            cell.innerHTML = 'Thursday'+\" \"+days[i-1];\r\n            break;\r\n          case 5:\r\n            cell.innerHTML = 'Friday'+\" \"+days[i-1];\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    calendarLogic(rawData){\r\n      try {\r\n        let obj = {days : {}};\r\n\r\n        //setta prima tutti i giorni a false\r\n        for(let i = 0; i < rawData.length ; i++){\r\n          obj.days[rawData[i].day] = {\r\n            '15:00-16:00' : false,\r\n            '16:00-17:00' : false,\r\n            '17:00-18:00' : false,\r\n            '18:00-19:00' : false,\r\n          };\r\n        }\r\n\r\n\r\n        //setta i giorni a true disponibili all'utente per quel corso di quel professor\r\n        // for(let i = 0; i < rawData.length ; i++){\r\n        //   obj.days[rawData[i].day][rawData[i].hour] = true;\r\n        // }\r\n\r\n        this.myObj = obj;\r\n      }catch (e){\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}