{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"Clicca\"), $data.dataLogic ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.dataLogic, row => {\n    return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString(row), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","onClick","_cache","args","$options","fetchData","$data","dataLogic","_createElementBlock","_Fragment","key","_renderList","row","_toDisplayString"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AgendaPage.vue"],"sourcesContent":["<template>\r\n  <button @click=\"fetchData\">Clicca</button>\r\n  <div v-if=\"dataLogic\" v-for=\"row in dataLogic\">\r\n    {{ row }}\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {toRaw} from \"vue\";\r\n\r\nexport default {\r\n  name: \"AgendaPage\",\r\n  data() {\r\n    return {\r\n      state: 1,\r\n      listOfReservedLessons: null,\r\n      dataLogic: null,\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchData();\r\n  },\r\n\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get('ServletGetBookingsForUser', {\r\n          params: {\r\n            action: 'web',\r\n            stato: toRaw(this.state)\r\n          }\r\n        })\r\n        this.listOfReservedLessons = response.data;\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n\r\n    createLogicFromData(list) {\r\n      if(list.length > 0){\r\n        const obj = { days : {}};\r\n        for(let i = 0 ; i < list.length ; i++){\r\n          obj.days[list[i].day+\"/\"+list[i].month] = { lessons : []};\r\n        }\r\n\r\n        for(let i = 0 ; i < list.length ; i++){\r\n          let listTmp = obj.days[list[i].day+\"/\"+list[i].month].lessons;\r\n          listTmp.push(list[i]);\r\n        }\r\n        this.dataLogic = obj;\r\n        console.log(obj);\r\n      }\r\n\r\n\r\n    },\r\n\r\n\r\n  },\r\n\r\n  watch: {\r\n    listOfReservedLessons(newList, oldList) {\r\n      console.log(toRaw(newList));\r\n      this.createLogicFromData(toRaw(newList));\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    test: function () {\r\n      return this.listOfReservedLessons.map(function (item) {\r\n        return item.professor;\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;6DACEA,mBAAA,CAA0C;IAAjCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,QAAM,GACtBG,KAAA,CAAAC,SAAS,I,kBAApBC,mBAAA,CAEMC,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CAF8BL,KAAA,CAAAC,SAAS,EAAhBK,GAAG;yBAAhCJ,mBAAA,CAEM,aAAAK,gBAAA,CADDD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}