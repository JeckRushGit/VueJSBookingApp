{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport VueMultiselect from 'vue-multiselect';\nimport { toRaw } from \"vue\";\nimport LoadingCircle from \"@/components/LoadingCircle.vue\";\nexport default {\n  name: \"AgendaPage\",\n  components: {\n    VueMultiselect,\n    LoadingCircle\n  },\n  data() {\n    return {\n      email_professore: \"pippo@gmail.com\",\n      titolo_corso: 'Matematica',\n      // mydata: null,\n      // selectedProfessor: null,\n      selectedCourse: null,\n      listOfCourses: null,\n      cities: ['Asti', 'Torino', 'Milano']\n    };\n  },\n  async created() {\n    this.Foo2();\n  },\n  methods: {\n    async Foo() {\n      try {\n        const response = await axios.get('ServletGetTeachings', {\n          params: {\n            action: 'web'\n          }\n        });\n        let x = toRaw(response.data);\n        let map = new Map();\n        for (let i = 0; i < x.length; i++) {\n          let key = x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\";\n          if (!map.has(key)) {\n            let listOfCourses = [x[i].course.course_titol];\n            let professorInfo = x[i].professor;\n            map.set(key, {\n              professorInfo: professorInfo,\n              listOfCourses: listOfCourses\n            });\n          } else {\n            let info = map.get(key);\n            let listOfCourse = info.listOfCourses;\n            listOfCourse.push(x[i].course.course_titol);\n          }\n        }\n        let list = [];\n        map.forEach((value, key) => {\n          list.push({\n            email: key,\n            info: value\n          });\n        });\n        this.mydata = list;\n        this.selectedProfessor = list[0];\n        this.listOfCourses = list[0].info.listOfCourses;\n        this.selectedCourse = list[0].info.listOfCourses[0];\n      } catch (e) {\n        this.$handle_session_expired();\n      }\n    },\n    async Foo2() {\n      const response = await axios.get('ServletGetTeachings', {\n        params: {\n          action: 'web'\n        }\n      });\n      let x = toRaw(response.data);\n      let map = new Map();\n      for (let i = 0; i < x.length; i++) {\n        let key = x[i].course.course_titol;\n        if (!map.has(key)) {\n          let listOfProfessor = [x[i].professor];\n          map.set(key, listOfProfessor);\n        } else {\n          let info = map.get(key);\n          let listOfProfessor = info;\n          listOfProfessor.push(x[i].professor);\n        }\n      }\n      let list = [];\n      map.forEach((value, key) => {\n        list.push({\n          course: key,\n          listOfProfessor: value\n        });\n      });\n      console.log(list);\n      this.listOfCourses = list;\n      this.selectedCourse = list[0];\n    }\n  },\n  watch: {\n    selectedProfessor(newProfessor, oldProfessor) {\n      this.listOfCourses = newProfessor.info.listOfCourses;\n      this.selectedCourse = newProfessor.info.listOfCourses[0];\n      console.log(toRaw(this.listOfCourses));\n    }\n  }\n};","map":{"version":3,"names":["axios","VueMultiselect","toRaw","LoadingCircle","name","components","data","email_professore","titolo_corso","selectedCourse","listOfCourses","cities","created","Foo2","methods","Foo","response","get","params","action","x","map","Map","i","length","key","professor","surname","email","has","course","course_titol","professorInfo","set","info","listOfCourse","push","list","forEach","value","mydata","selectedProfessor","e","$handle_session_expired","listOfProfessor","console","log","watch","newProfessor","oldProfessor"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AgendaPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex flex-row justify-content-center\" v-if=\"listOfCourses\">\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"mt-5 text-center\">\r\n      <p>Selected Professor :</p>\r\n      <VueMultiselect class=\"dropdown-style\" label=\"course\" :hideSelected=\"true\" :allowEmpty=\"false\"\r\n                      :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n    </div>\r\n    <div class=\"spacer\" style=\"flex-grow: 4\"></div>\r\n\r\n    <div class=\"mt-5 text-center\">\r\n      <p>Selected Course :</p>\r\n      <VueMultiselect class=\"dropdown-style\" :allowEmpty=\"false\" :hideSelected=\"true\" :options=\"listOfCourses\"\r\n                      v-model=\"selectedCourse\"/>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n  </div>\r\n  <div v-else class=\"d-flex justify-content-center\">\r\n    <div class=\"spacer\"></div>\r\n    <LoadingCircle class=\"mt-5\"></LoadingCircle>\r\n    <div class=\"spacer\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport {toRaw} from \"vue\";\r\nimport LoadingCircle from \"@/components/LoadingCircle.vue\";\r\n\r\nexport default {\r\n  name: \"AgendaPage\",\r\n  components: {\r\n    VueMultiselect,\r\n    LoadingCircle\r\n  },\r\n  data() {\r\n    return {\r\n      email_professore: \"pippo@gmail.com\",\r\n      titolo_corso: 'Matematica',\r\n      // mydata: null,\r\n      // selectedProfessor: null,\r\n      selectedCourse: null,\r\n      listOfCourses: null,\r\n      cities: ['Asti', 'Torino', 'Milano']\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    this.Foo2();\r\n  },\r\n\r\n  methods: {\r\n    async Foo() {\r\n      try {\r\n        const response = await axios.get('ServletGetTeachings', {params: {action: 'web'}});\r\n        let x = toRaw(response.data);\r\n        let map = new Map();\r\n        for (let i = 0; i < x.length; i++) {\r\n          let key = x[i].professor.name + \" \" + x[i].professor.surname + \" \" + \"(\" + x[i].professor.email + \")\";\r\n          if (!map.has(key)) {\r\n            let listOfCourses = [x[i].course.course_titol];\r\n            let professorInfo = x[i].professor;\r\n            map.set(key, {\r\n              professorInfo: professorInfo,\r\n              listOfCourses: listOfCourses\r\n            });\r\n          } else {\r\n            let info = map.get(key);\r\n            let listOfCourse = info.listOfCourses;\r\n            listOfCourse.push(x[i].course.course_titol);\r\n          }\r\n        }\r\n        let list = [];\r\n        map.forEach((value, key) => {\r\n          list.push({email: key, info: value});\r\n        })\r\n        this.mydata = list;\r\n        this.selectedProfessor = list[0];\r\n        this.listOfCourses = list[0].info.listOfCourses;\r\n        this.selectedCourse = list[0].info.listOfCourses[0];\r\n      } catch (e) {\r\n        this.$handle_session_expired()\r\n      }\r\n    },\r\n\r\n    async Foo2() {\r\n      const response = await axios.get('ServletGetTeachings', {params: {action: 'web'}});\r\n      let x = toRaw(response.data);\r\n      let map = new Map();\r\n      for (let i = 0; i < x.length; i++) {\r\n        let key = x[i].course.course_titol;\r\n        if (!map.has(key)) {\r\n          let listOfProfessor = [x[i].professor];\r\n          map.set(key, listOfProfessor);\r\n        } else {\r\n          let info = map.get(key);\r\n          let listOfProfessor = info;\r\n          listOfProfessor.push(x[i].professor);\r\n        }\r\n      }\r\n\r\n\r\n      let list = [];\r\n      map.forEach((value, key) => {\r\n        list.push({course: key, listOfProfessor: value});\r\n      })\r\n\r\n      console.log(list);\r\n      this.listOfCourses = list;\r\n      this.selectedCourse = list[0];\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  watch: {\r\n    selectedProfessor(newProfessor, oldProfessor) {\r\n      this.listOfCourses = newProfessor.info.listOfCourses;\r\n      this.selectedCourse = newProfessor.info.listOfCourses[0];\r\n      console.log(toRaw(this.listOfCourses));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.dropdown-style {\r\n  width: 400px;\r\n  flex-grow: 4;\r\n}\r\n\r\n.my-container-1 {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.spacer {\r\n  flex-grow: 1;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}