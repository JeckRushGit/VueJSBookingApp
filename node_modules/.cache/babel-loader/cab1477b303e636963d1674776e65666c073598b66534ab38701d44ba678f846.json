{"ast":null,"code":"import axios from \"axios\";\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\nexport default {\n  name: \"AddTeachingsPage\",\n  components: {\n    VueMultiselect\n  },\n  data() {\n    return {\n      listOfProfessors: null,\n      selectedProfessor: null,\n      listOfCourses: null,\n      selectedCourse: null\n    };\n  },\n  async created() {\n    await this.fetchProfessors();\n  },\n  methods: {\n    async fetchProfessors() {\n      try {\n        const response = await axios.get('ServletProfessorRequests', {\n          params: {\n            action: 'getProfessors'\n          }\n        });\n        this.listOfProfessors = response.data;\n      } catch (e) {\n        console.log(e.response);\n      }\n    },\n    async fetchCourses(professor) {\n      try {\n        const response = await axios.get('ServletProfessorRequests', {\n          params: {\n            action: 'getCourses',\n            professorEmail: professor.email\n          }\n        });\n        this.listOfCourses = response.data;\n      } catch (e) {\n        console.log(e.response);\n      }\n    }\n  },\n  watch: {\n    listOfProfessors(newList, oldList) {\n      this.selectedProfessor = this.listOfProfessorLogic[0];\n    },\n    async selectedProfessor(newProfessor, oldProfessor) {\n      await this.fetchCourses(newProfessor.info);\n    },\n    listOfCourses(newList, oldList) {\n      this.selectedCourse = newList[0];\n    }\n  },\n  computed: {\n    listOfProfessorLogic() {\n      return this.listOfProfessors.map(function (professor) {\n        return {\n          label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\",\n          info: professor\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","VueMultiselect","name","components","data","listOfProfessors","selectedProfessor","listOfCourses","selectedCourse","created","fetchProfessors","methods","response","get","params","action","e","console","log","fetchCourses","professor","professorEmail","email","watch","newList","oldList","listOfProfessorLogic","newProfessor","oldProfessor","info","computed","map","label","surname"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AddTeachingsPage.vue"],"sourcesContent":["<template>\r\n<!--  <button @click=\"fetchProfessors\">Premi</button>-->\r\n<!--  <button @click=\"fetchCourses('pippo@gmail.com')\">Premi2</button>-->\r\n  <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfProfessors\" label=\"label\" :options=\"listOfProfessorLogic\" v-model=\"selectedProfessor\"/>\r\n  <VueMultiselect :hideSelected=\"true\" :allowEmpty=\"false\" v-if=\"listOfCourses\" label=\"course_titol\" :options=\"listOfCourses\" v-model=\"selectedCourse\"/>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport VueMultiselect from \"vue-multiselect/src/Multiselect.vue\";\r\n\r\nexport default {\r\n  name: \"AddTeachingsPage\",\r\n  components: {VueMultiselect},\r\n  data(){\r\n    return{\r\n      listOfProfessors : null,\r\n      selectedProfessor : null,\r\n      listOfCourses : null,\r\n      selectedCourse : null,\r\n    }\r\n  },\r\n\r\n  async created(){\r\n    await this.fetchProfessors();\r\n  },\r\n  methods : {\r\n    async fetchProfessors(){\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests',{params : {action : 'getProfessors'}})\r\n        this.listOfProfessors = response.data;\r\n\r\n      }catch (e){\r\n        console.log(e.response)\r\n      }\r\n    },\r\n    async fetchCourses(professor){\r\n      try {\r\n        const response = await axios.get('ServletProfessorRequests',{params : {action : 'getCourses',professorEmail : professor.email}});\r\n        this.listOfCourses = response.data;\r\n\r\n      }catch (e){\r\n        console.log(e.response)\r\n      }\r\n    }\r\n  },\r\n  watch : {\r\n    listOfProfessors(newList,oldList){\r\n      this.selectedProfessor = this.listOfProfessorLogic[0];\r\n    },\r\n\r\n    async selectedProfessor(newProfessor,oldProfessor){\r\n      await this.fetchCourses(newProfessor.info)\r\n    },\r\n    listOfCourses(newList,oldList){\r\n      this.selectedCourse = newList[0];\r\n    }\r\n  },\r\n\r\n  computed : {\r\n    listOfProfessorLogic(){\r\n      return this.listOfProfessors.map(function (professor) {\r\n        return {label: professor.name + \" \" + professor.surname + \" (\" + professor.email + \")\", info: professor};\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAQA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,cAAa,MAAO,qCAAqC;AAEhE,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IAACF;EAAc,CAAC;EAC5BG,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,gBAAe,EAAI,IAAI;MACvBC,iBAAgB,EAAI,IAAI;MACxBC,aAAY,EAAI,IAAI;MACpBC,cAAa,EAAI;IACnB;EACF,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAE;IACb,MAAM,IAAI,CAACC,eAAe,EAAE;EAC9B,CAAC;EACDC,OAAM,EAAI;IACR,MAAMD,eAAeA,CAAA,EAAE;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,0BAA0B,EAAC;UAACC,MAAK,EAAI;YAACC,MAAK,EAAI;UAAe;QAAC,CAAC;QACjG,IAAI,CAACV,gBAAe,GAAIO,QAAQ,CAACR,IAAI;MAEvC,CAAC,QAAOY,CAAC,EAAC;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACJ,QAAQ;MACxB;IACF,CAAC;IACD,MAAMO,YAAYA,CAACC,SAAS,EAAC;MAC3B,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,0BAA0B,EAAC;UAACC,MAAK,EAAI;YAACC,MAAK,EAAI,YAAY;YAACM,cAAa,EAAID,SAAS,CAACE;UAAK;QAAC,CAAC,CAAC;QAChI,IAAI,CAACf,aAAY,GAAIK,QAAQ,CAACR,IAAI;MAEpC,CAAC,QAAOY,CAAC,EAAC;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACJ,QAAQ;MACxB;IACF;EACF,CAAC;EACDW,KAAI,EAAI;IACNlB,gBAAgBA,CAACmB,OAAO,EAACC,OAAO,EAAC;MAC/B,IAAI,CAACnB,iBAAgB,GAAI,IAAI,CAACoB,oBAAoB,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,MAAMpB,iBAAiBA,CAACqB,YAAY,EAACC,YAAY,EAAC;MAChD,MAAM,IAAI,CAACT,YAAY,CAACQ,YAAY,CAACE,IAAI;IAC3C,CAAC;IACDtB,aAAaA,CAACiB,OAAO,EAACC,OAAO,EAAC;MAC5B,IAAI,CAACjB,cAAa,GAAIgB,OAAO,CAAC,CAAC,CAAC;IAClC;EACF,CAAC;EAEDM,QAAO,EAAI;IACTJ,oBAAoBA,CAAA,EAAE;MACpB,OAAO,IAAI,CAACrB,gBAAgB,CAAC0B,GAAG,CAAC,UAAUX,SAAS,EAAE;QACpD,OAAO;UAACY,KAAK,EAAEZ,SAAS,CAAClB,IAAG,GAAI,GAAE,GAAIkB,SAAS,CAACa,OAAM,GAAI,IAAG,GAAIb,SAAS,CAACE,KAAI,GAAI,GAAG;UAAEO,IAAI,EAAET;QAAS,CAAC;MAC1G,CAAC,CAAC;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}