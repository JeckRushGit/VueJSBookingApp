{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"m-5\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"400px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.users ? (_openBlock(), _createBlock(_component_VueMultiselect, {\n    key: 0,\n    label: \"label\",\n    options: $options.userData,\n    v: \"\"\n  }, null, 8 /* PROPS */, [\"options\"])) : _createCommentVNode(\"v-if\", true)])]), $data.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.selectedUser), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_hoisted_1","_hoisted_2","$data","users","_createBlock","_component_VueMultiselect","label","options","$options","userData","v","selectedUser","_createElementBlock","_hoisted_3","_toDisplayString"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AdminRemoveLessons.vue"],"sourcesContent":["<template>\r\n  <div class=\"m-5\">\r\n    <div style=\"width: 400px\">\r\n      <VueMultiselect v-if=\"users\" label=\"label\" :options=\"userData\" v/>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"selectedUser\">\r\n    {{selectedUser}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AdminRemoveLessons\",\r\n  components: {\r\n    VueMultiselect\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchUsers();\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      users: null,\r\n      selectedUser: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings', {\r\n          params: {\r\n            action: 'getListOfUsers',\r\n            device: 'web'\r\n          }\r\n        });\r\n        this.users = response.data;\r\n\r\n      } catch (e) {\r\n        console.error(e.response);\r\n        if (e.response.status === 401) {\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    },\r\n\r\n    async fetchBookingsForUser(selectedUser) {\r\n      try {\r\n        const response = await axios.get('ServletAdminGetBookings', {\r\n          params: {\r\n            action: 'getBookingsForUser',\r\n            device: 'web',\r\n            userEmail: selectedUser.email\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.error(e.response);\r\n        if (e.response.status === 401) {\r\n          this.$handle_session_expired()\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    userData(){\r\n      return this.users.map(function (user){\r\n        return {label : user.name+\" \"+user.surname+\" (\"+user.email+\")\",info : user};\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    users(newUsers, oldUsers) {\r\n      this.selectedUser = this.userData[0];\r\n    },\r\n    selectedUser(newSelectedUser, oldSelectedUser) {\r\n      this.fetchBookingsForUser(newSelectedUser);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EACTC,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;;;;6DAD3BC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAEM,OAFNE,UAEM,GADkBC,KAAA,CAAAC,KAAK,I,cAA3BC,YAAA,CAAkEC,yBAAA;;IAArCC,KAAK,EAAC,OAAO;IAAEC,OAAO,EAAEC,QAAA,CAAAC,QAAQ;IAAEC,CAAC,EAAD;iFAIxDR,KAAA,CAAAS,YAAY,I,cAAvBC,mBAAA,CAEM,OAAAC,UAAA,EAAAC,gBAAA,CADFZ,KAAA,CAAAS,YAAY,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}