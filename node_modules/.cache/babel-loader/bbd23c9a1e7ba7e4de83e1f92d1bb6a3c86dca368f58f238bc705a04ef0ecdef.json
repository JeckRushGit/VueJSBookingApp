{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-row\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $data.mydata ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_VueMultiselect, {\n    class: \"dropdown-style\",\n    onSelect: $options.MyFunction,\n    label: \"info.professorInfo.email\",\n    hideSelected: true,\n    allowEmpty: false,\n    options: this.mydata,\n    modelValue: $data.selectedProfessor,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProfessor = $event)\n  }, null, 8 /* PROPS */, [\"onSelect\", \"options\", \"modelValue\"])])) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createCommentVNode(\"    <VueMultiselect class=\\\"dropdown-style\\\" :options=\\\"mydata\\\" v-model=\\\"selected\\\"></VueMultiselect>\"), _createCommentVNode(\"    <div class=\\\"spacer\\\"></div>\")]), _createCommentVNode(\"  <VueMultiselect :options=\\\"cities\\\" v-model=\\\"selected\\\"></VueMultiselect>\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","$data","mydata","_createElementBlock","_hoisted_3","_createVNode","_component_VueMultiselect","onSelect","$options","MyFunction","label","hideSelected","allowEmpty","options","selectedProfessor","$event","_hoisted_4","_createCommentVNode"],"sources":["C:\\Users\\giaco\\Desktop\\folderperview\\src\\pages\\AgendaPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex flex-row\">\r\n    <div class=\"spacer\"></div>\r\n    <div v-if=\"mydata\">\r\n      <VueMultiselect class=\"dropdown-style\" @select=\"MyFunction\"  label=\"info.professorInfo.email\" :hideSelected=\"true\" :allowEmpty=\"false\" :options=\"this.mydata\" v-model=\"selectedProfessor\"></VueMultiselect>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n<!--    <VueMultiselect class=\"dropdown-style\" :options=\"mydata\" v-model=\"selected\"></VueMultiselect>-->\r\n<!--    <div class=\"spacer\"></div>-->\r\n  </div>\r\n<!--  <VueMultiselect :options=\"cities\" v-model=\"selected\"></VueMultiselect>-->\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport {toRaw} from \"vue\";\r\nexport default {\r\n  name: \"AgendaPage\",\r\n  components : {\r\n    VueMultiselect\r\n  },\r\n  data(){\r\n    return{\r\n      email_professore : \"pippo@gmail.com\",\r\n      titolo_corso : 'Matematica',\r\n      mydata : null,\r\n      selectedProfessor : null,\r\n      cities : ['Asti','Torino','Milano']\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    this.Foo();\r\n  },\r\n\r\n  methods : {\r\n    async Foo(){\r\n      try {\r\n        const response = await axios.get('ServletGetTeachings',{params : {action : 'web'}});\r\n        let x = toRaw(response.data);\r\n        let map = new Map();\r\n        for(let i = 0; i < x.length ; i++){\r\n          let key = x[i].professor.email;\r\n          if(!map.has(key)){\r\n            let listOfCourses = [x[i].course.course_titol];\r\n            let professorInfo = x[i].professor;\r\n            map.set(key,{\r\n              professorInfo : professorInfo,\r\n              listOfCourses : listOfCourses\r\n            });\r\n          }else{\r\n            let info = map.get(key);\r\n            let listOfCourse = info.listOfCourses;\r\n            listOfCourse.push(x[i].course.course_titol);\r\n          }\r\n        }\r\n        let list = [];\r\n        map.forEach((value,key) => {\r\n          list.push({email : key,info : value});\r\n        })\r\n        this.mydata = list;\r\n      }catch (e){\r\n        console.log(e)\r\n      }\r\n    },\r\n\r\n    MyFunction(){\r\n      console.log(toRaw(this.selectedProfessor));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n\r\n  .dropdown-style{\r\n    width: 400px;\r\n    margin-top: 75px;\r\n  }\r\n\r\n  .my-container-1{\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  .spacer{\r\n    flex-grow: 1;\r\n  }\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;gCAC1BC,mBAAA,CAA0B;EAArBD,KAAK,EAAC;AAAQ;;;;gCAInBC,mBAAA,CAA0B;EAArBD,KAAK,EAAC;AAAQ;;;;6DALrBC,mBAAA,CAQM,OARNC,UAQM,GAPJC,UAA0B,EACfC,KAAA,CAAAC,MAAM,I,cAAjBC,mBAAA,CAEM,OAAAC,UAAA,GADJC,YAAA,CAA2MC,yBAAA;IAA3LT,KAAK,EAAC,gBAAgB;IAAEU,QAAM,EAAEC,QAAA,CAAAC,UAAU;IAAGC,KAAK,EAAC,0BAA0B;IAAEC,YAAY,EAAE,IAAI;IAAGC,UAAU,EAAE,KAAK;IAAGC,OAAO,OAAOX,MAAM;gBAAWD,KAAA,CAAAa,iBAAiB;+DAAjBb,KAAA,CAAAa,iBAAiB,GAAAC,MAAA;yGAE1LC,UAA0B,EAC9BC,mBAAA,2GAAwG,EACxGA,mBAAA,oCAAqC,C,GAErCA,mBAAA,gFAA+E,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}